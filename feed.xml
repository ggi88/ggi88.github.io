<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title></title>
    <link>http://yoursite.com/</link>
    <atom:link href="/feed.xml" rel="self" type="application/rss+xml"/>
    
    <description></description>
    <pubDate>Thu, 16 Jan 2020 09:29:37 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>2020년 목표</title>
      <link>http://yoursite.com/2020/01/16/2020-gaol/</link>
      <guid>http://yoursite.com/2020/01/16/2020-gaol/</guid>
      <pubDate>Thu, 16 Jan 2020 05:34:10 GMT</pubDate>
      <description>
      
        
        
          &lt;h2 id=&quot;2019년-되돌아보기&quot;&gt;&lt;a href=&quot;#2019년-되돌아보기&quot; class=&quot;headerlink&quot; title=&quot;2019년 되돌아보기&quot;&gt;&lt;/a&gt;2019년 되돌아보기&lt;/h2&gt;&lt;p&gt;2019년 시작할 때 마무리까지 정신없는 해였던 것 같다. 목
        
      
      </description>
      
      
      <content:encoded><![CDATA[<h2 id="2019년-되돌아보기"><a href="#2019년-되돌아보기" class="headerlink" title="2019년 되돌아보기"></a>2019년 되돌아보기</h2><p>2019년 시작할 때 마무리까지 정신없는 해였던 것 같다. 목표와는 다르게 바쁜 업무에 치여 뒤돌아보니 한 해가 마무리되었다.<br>2020년에는 2019년 보다 좀 더 이것저것 많이 해보자</p><h3 id="01-03"><a href="#01-03" class="headerlink" title="01 ~ 03"></a>01 ~ 03</h3><p>같이 일하던 동료들이 먼저 떠나고 반복되던 일만 하며 지내던 도중 회사 워크샵을 통해 간단한 심리검사를 받았다.<br>간단한 심리검사지만 결과지를 보니 내가 생각한 것 이상으로 업무적인 만족도와 스트레스가 심각했다.<br>이래선 안되겠다 싶어 이직준비 본격적으로 시작했다.</p><p>회사에 출근해서 오전에는 개인 프로젝트를 오후에는 회사 업무를 진행하며, 퇴근 후에는 이력서를 작성했다.<br>이직의 최소조건은 복지, 급여, 경험 셋 중 하나라도 만족되는 곳으로 정하고 새로운 곳으로 이직을 했다.</p><h3 id="04-06"><a href="#04-06" class="headerlink" title="04 ~ 06"></a>04 ~ 06</h3><p>유지되는 시스템을 관리하는 줄 알았는데 가서 현황을 보니 신규 시스템을 구축하는 프로젝트였다. 사전에 협의된 것과 얘기가 많이 달라 재차 얘기를 했지만 언제나 그렇듯 달라진건 없었다. 그래도 긍정적인 마인드로 프로젝트를 진행한 것 같다</p><p>새로운 환경에 적응하느라 어색하게 몇 달을 보낸 후 익숙해질 무렵 프로젝트에 대한 구체적인 계획이나 설계를 전달해주지 않아 진행을 뎌더 남은 시간에 개인 프로젝트를 진행했다.</p><p>이때 어느 정도 새해 목표한 독서 활동을 시작 할 수 있었다. 읽은 책들이 대부분 기술서적이라 마음에 양식과는 거리가 멀지만 그래도 읽은 게 마음이 위로가 됐다.</p><p>그리고 지킬로 운영되던 깃블로그를 헥소로 변경하고 전보다 더 운영하고자 했는데<br>목표로 세웠던 1주 1포스트가 바쁜 일상에 쫒겨 아무것도 못한거 같다.</p><p>올 해는 1달 1포스트를 최소로 잡아 여유롭게 낙서하는 습관을 길렀야겠다. 뭐라도 자주 쓰면 습관이 길러지겠지…<br>독서도 1달 1권을 목표로 해서 뭐가 됐건 읽어야겠다.</p><h3 id="07-09"><a href="#07-09" class="headerlink" title="07 ~ 09"></a>07 ~ 09</h3><p>여전히 계획이나 설계 없이 프로젝트가 진행되었다. 현재도 마찬가지…<br>인원변동이 있었다. 대부분 나가고 들어와 새로운 인원들과 개발을 같이 진행했다.</p><p>그리고 이 때부터 많은 작업을 했다. 메인 개발은 물론이거니와 런처 및 업데이터 개발, 배포시스템 구축, 개발환경 정리, 이슈관리시스템 도입 등 당연히 프로젝트 시작 전에 작업이 되어야 할 것들이지만 IT회사가 아니여서 그런가 무계획, 무설계, 무협의 등 개발을 하는 입장에서 어느것 하나 정해지지 않고 그때그때 구두로 개발사항들이 전달되고 급히 진행해야하니 내가 무엇을 만드는지 알 수가 없어 스스로도 프로그램을 신뢰할 수 없었다.</p><p>다시금 PM이 중요하다는 것을 알았고 구체적인 설계없이 개발하지 말아야겠다는 생각이 들었다. 이렇게 진행할꺼면 그냥 나에게 PM을 시키지 하나씩 하나씩 해주다 보니 열을 해줘야하는 불쌍한 개발자가 된 듯하다</p><p>중간중간 파이콘이나 데뷰 등 컨퍼런스를 신청해 기분전환 겸 다녀왔는데, 언제나 반복되는 일상을 벗어나는 짓은 기분 좋다. 월차 내고 컨퍼런스 다니면서 요즘 동향을 어떤지 살펴보다 보면 스스로 자극도 받게 되고 좀 더 열심히 살아야지 하는 마음이 생긴다.<br>올해도 가능하면 반기에 1~2번은 신청해 다녀오고 싶다</p><h3 id="09-12"><a href="#09-12" class="headerlink" title="09 ~ 12"></a>09 ~ 12</h3>]]></content:encoded>
      
      <comments>http://yoursite.com/2020/01/16/2020-gaol/#disqus_thread</comments>
    </item>
    
    <item>
      <title>[hexo] vexo 테마에서 카테고리 메뉴 추가하기</title>
      <link>http://yoursite.com/2019/10/23/make-categorymenu-post/</link>
      <guid>http://yoursite.com/2019/10/23/make-categorymenu-post/</guid>
      <pubDate>Wed, 23 Oct 2019 09:01:35 GMT</pubDate>
      <description>
      
        
        
          &lt;h2 id=&quot;hexo-에서-vexo-테마-사용-시-카테고리-추가하기&quot;&gt;&lt;a href=&quot;#hexo-에서-vexo-테마-사용-시-카테고리-추가하기&quot; class=&quot;headerlink&quot; title=&quot;hexo 에서 vexo 테마 사용 시 카테고리 추가하기&quot;&gt;
        
      
      </description>
      
      
      <content:encoded><![CDATA[<h2 id="hexo-에서-vexo-테마-사용-시-카테고리-추가하기"><a href="#hexo-에서-vexo-테마-사용-시-카테고리-추가하기" class="headerlink" title="hexo 에서 vexo 테마 사용 시 카테고리 추가하기"></a>hexo 에서 vexo 테마 사용 시 카테고리 추가하기</h2><h3 id="vexo-config-설정"><a href="#vexo-config-설정" class="headerlink" title="vexo config 설정"></a>vexo config 설정</h3><p><img src="/images/vexo_config_menu.png" alt=""></p><h3 id="vexo-카테고리-폴더-및-파일-추가"><a href="#vexo-카테고리-폴더-및-파일-추가" class="headerlink" title="vexo 카테고리 폴더 및 파일 추가"></a>vexo 카테고리 폴더 및 파일 추가</h3><ul><li><p><img src="/images/vexo_tree.png" alt=""></p></li><li><p>vexo/_source/categories/index.md</p></li></ul><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: Categories</span><br><span class="line">layout: categories</span><br><span class="line">---</span><br></pre></td></tr></table></figure><ul><li>vexo/layout/_partial/categories.ejs</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;% categories.each(function(category) &#123; %&gt;</span><br><span class="line">  &lt;a href=&quot;&lt;%- url_for(config.root + config.category_dir) %&gt;#&lt;%= category.name %&gt;&quot; &gt;</span><br><span class="line">    &lt;span class=&quot;category-code&quot;&gt;&lt;%= category.name %&gt;&lt;/span&gt;</span><br><span class="line">  &lt;/a&gt;</span><br><span class="line">&lt;% &#125;) %&gt;</span><br></pre></td></tr></table></figure><ul><li>vexo/layout/_third-party/categories</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id=&quot;article-banner&quot;&gt;</span><br><span class="line">  &lt;h2&gt;Categories&lt;/h2&gt;</span><br><span class="line">  &lt;p class=&quot;post-date&quot;&gt;카테고리&lt;/p&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;main class=&quot;app-body&quot;&gt;</span><br><span class="line">  &lt;div id=&quot;category-cloud&quot;&gt;</span><br><span class="line">    &lt;% site.categories.map(function(category, index) &#123; %&gt;</span><br><span class="line">      &lt;a class=&quot;category&lt;%= Math.round(Math.random() * 3) %&gt;&quot; data-name=&quot;category-&lt;%= category.name %&gt;&quot;&gt;&lt;%= category.name %&gt;&lt;/a&gt;</span><br><span class="line">    &lt;% &#125;) %&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">  &lt;% site.categories.map(function(category, index)&#123; %&gt;</span><br><span class="line">    &lt;div class=&quot;category-list&quot;&gt;</span><br><span class="line">      &lt;h3 class=&quot;category-name&quot; id=&quot;category-&lt;%= category.name %&gt;&quot;&gt;&lt;%= category.name %&gt;&lt;/h3&gt;</span><br><span class="line">      &lt;% category.posts.map(function(post) &#123; %&gt;</span><br><span class="line">        &lt;ul class=&quot;category-preview&quot;&gt;</span><br><span class="line">          &lt;li&gt;</span><br><span class="line">            &lt;a href=&quot;&lt;%- config.root %&gt;&lt;%- post.path %&gt;&quot;&gt;&lt;%- post.title || &quot;Untitled&quot; %&gt;&lt;/a&gt;</span><br><span class="line">          &lt;/li&gt;</span><br><span class="line">        &lt;/ul&gt;</span><br><span class="line">        &lt;% &#125;) %&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;% &#125;) %&gt;</span><br><span class="line">&lt;/main&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">  (function () &#123;</span><br><span class="line">    var url = &apos;&lt;%= config.url %&gt;/&lt;%= page.path %&gt;&apos;</span><br><span class="line">    $(&apos;#article-banner&apos;).geopattern(url)</span><br><span class="line">    $(&apos;.header&apos;).removeClass(&apos;fixed-header&apos;)</span><br><span class="line"></span><br><span class="line">    var category = location.hash.replace(&apos;#&apos;, &apos;&apos;)</span><br><span class="line">    if (category) &#123;</span><br><span class="line">      var categoryId = &quot;#category-&quot; + category;</span><br><span class="line">      $(&quot;html, body&quot;).animate(&#123;</span><br><span class="line">        scrollTop: $(categoryId).offset().top </span><br><span class="line">      &#125;, 400)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)();</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h3 id="hexo-config-설정"><a href="#hexo-config-설정" class="headerlink" title="hexo config 설정"></a>hexo config 설정</h3><p><img src="/images/hexo_directory.png" alt=""></p><h3 id="post-파일-해더에-카테고리-등록"><a href="#post-파일-해더에-카테고리-등록" class="headerlink" title="post 파일 해더에 카테고리 등록"></a>post 파일 해더에 카테고리 등록</h3><p>ex)</p><pre><code class="markdown">---layout: posttitle:  "[delphi] 스마트 포인터"date:   2018-03-29 00:00:00categories: <span class="bullet">- </span>delphitags:<span class="bullet">- </span>delphi<span class="bullet">- </span>스마트 포인터<span class="bullet">- </span>스마트 가드published: true---</code></pre><h3 id="카테고리-메뉴-확인"><a href="#카테고리-메뉴-확인" class="headerlink" title="카테고리 메뉴 확인"></a>카테고리 메뉴 확인</h3><p><img src="/images/hexo_category.png" alt=""></p>]]></content:encoded>
      
      <comments>http://yoursite.com/2019/10/23/make-categorymenu-post/#disqus_thread</comments>
    </item>
    
    <item>
      <title>[book] Do it Vue.js 입문</title>
      <link>http://yoursite.com/2019/03/20/book-startvuejs/</link>
      <guid>http://yoursite.com/2019/03/20/book-startvuejs/</guid>
      <pubDate>Tue, 19 Mar 2019 15:00:00 GMT</pubDate>
      <description>
      
        
        
          &lt;h2 id=&quot;참고&quot;&gt;&lt;a href=&quot;#참고&quot; class=&quot;headerlink&quot; title=&quot;참고&quot;&gt;&lt;/a&gt;참고&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;책 예제 코드: &lt;a href=&quot;https://github.com/joshua1988/doit-vuejs&quot; targ
        
      
      </description>
      
      
      <content:encoded><![CDATA[<h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><ul><li>책 예제 코드: <a href="https://github.com/joshua1988/doit-vuejs" target="_blank" rel="noopener">https://github.com/joshua1988/doit-vuejs</a></li></ul><h2 id="VueJS-학습"><a href="#VueJS-학습" class="headerlink" title="VueJS 학습"></a>VueJS 학습</h2><h3 id="입문자"><a href="#입문자" class="headerlink" title="입문자"></a>입문자</h3><h4 id="1일차"><a href="#1일차" class="headerlink" title="1일차"></a>1일차</h4><ul><li><p>Vue.js 가 무엇인지 이해하고, 개발 환경을 설정합니다. 첫 프로젝트를 만들며 몸을 풀고 화면을 개발하기 위한 필수 단위인 인스턴스에 대해 알아봅시다.</p></li><li><p>01장, 02장, 03-1</p></li></ul><h4 id="2일차"><a href="#2일차" class="headerlink" title="2일차"></a>2일차</h4><ul><li><p>Vue.js 애플리케이션의 구조를 탄탄히 설계할 수 있도록 컴포넌트와 컴포넌트 통신 방법에 대해 알아봅시다.</p></li><li><p>03-2, 03-03</p></li></ul><h4 id="3일차"><a href="#3일차" class="headerlink" title="3일차"></a>3일차</h4><ul><li><p>실제로 서비스할 상용 웹 앱을 개발할 때 반드시 필요한 Vue.js 라우터와 HTTP 통신에 대해 알아봅시다.</p></li><li><p>04장</p></li></ul><h4 id="4일차"><a href="#4일차" class="headerlink" title="4일차"></a>4일차</h4><ul><li><p>Vue.js로 화면을 꾸미는 방법을 배우고 프로젝트를 구성하는 여러가지 방법에 대해 익힙니다. 그리고 배운 내용을 총집합하여 할 일 관리 앱 개발을 시작합니다.</p></li><li><p>05장, 06-1 ~ 06-3</p></li></ul><h4 id="5일차"><a href="#5일차" class="headerlink" title="5일차"></a>5일차</h4><ul><li><p>할 일 관리 앱의 컴포넌트 내용을 구현하고 기능을 개선하는 방법을 익혀 애플리케이션을 완성합니다.</p></li><li><p>06-4 ~ 06-6</p></li></ul><h4 id="6일차"><a href="#6일차" class="headerlink" title="6일차"></a>6일차</h4><ul><li><p>Vue.js로 좀 더 복잡한 애플리케이션을 개발할 수 있는 중.고급 개발자가 되기 위한 지식을 살펴봅시다.</p></li><li><p>07장</p></li></ul><h4 id="7일차"><a href="#7일차" class="headerlink" title="7일차"></a>7일차</h4><ul><li><p>실제 현장에서 Vue.js를 사용할 때 맞닥뜨릴 수 있는 여러 상황들을 어떻게 해결할 수 있는 지 살펴봅시다.</p></li><li><p>부록</p></li><li><p>asd</p></li><li><p>props 속성<br>상위 컴포넌트에서 하위 컴포넌트로 데이터를 전달할 때 사용하는 속성</p></li><li><p>이벤트 버스 형식<br>vue는 상위에서 하위로 이벤트를 전달해야하지만 이벤트버스는 1:1 관계로 보낼 수 있다.</p><p>이벤트를 보내는 부분<br>  .$emit()<br>이벤트를 받는 부분<br>  .$on()</p></li></ul>]]></content:encoded>
      
      <comments>http://yoursite.com/2019/03/20/book-startvuejs/#disqus_thread</comments>
    </item>
    
    <item>
      <title>[book] 프론트엔드 개발 첫걸음</title>
      <link>http://yoursite.com/2019/01/10/book-firststepsinfrontend/</link>
      <guid>http://yoursite.com/2019/01/10/book-firststepsinfrontend/</guid>
      <pubDate>Wed, 09 Jan 2019 15:00:00 GMT</pubDate>
      <description>
      
        
        
          &lt;h2 id=&quot;참고&quot;&gt;&lt;a href=&quot;#참고&quot; class=&quot;headerlink&quot; title=&quot;참고&quot;&gt;&lt;/a&gt;참고&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;책 예제 코드: &lt;a href=&quot;https://github.com/okachijs/jsframeworkbook&quot; t
        
      
      </description>
      
      
      <content:encoded><![CDATA[<h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><ul><li>책 예제 코드: <a href="https://github.com/okachijs/jsframeworkbook" target="_blank" rel="noopener">https://github.com/okachijs/jsframeworkbook</a></li></ul><h2 id="자바스크립트-프론트엔드-개발-프레임워크의-최신-동향"><a href="#자바스크립트-프론트엔드-개발-프레임워크의-최신-동향" class="headerlink" title="자바스크립트 프론트엔드 개발 프레임워크의 최신 동향"></a>자바스크립트 프론트엔드 개발 프레임워크의 최신 동향</h2><h3 id="프레임워크의-발전"><a href="#프레임워크의-발전" class="headerlink" title="프레임워크의 발전"></a>프레임워크의 발전</h3><ul><li><p>프레임워크 vs 라이브러리</p><ul><li>라이브러리: 프로그램에서 필요로하는 기능을 제 3자가 사용할 수 있는 형태로 모아둔 것</li><li>프레임워크: 애플리케이션의 전체 옥은 일부분의 형태를 규정 혹은 방침화한 것</li></ul></li><li><p>SPA(Single Page Application)</p><ul><li>브라우저 및 브라우저 렌더링 엔진 내부에서 동작하는 웹 애플리케이션</li><li>프라우저에서 최초 접근한 URL을 기점으로 하여 다양한 화면으로 이동을 제공하지만 기본적으로 최초의 JTML 안에서 사용자 인터페이스가 완결됨</li><li>페이지 내의 사용자 인터페이스 변화에 따라 URL이 순차적으로 변화하며, 브라우저 히스토리를 통해 앞의 페이지로 거슬러 올라갈 수 있음</li><li>페이지에서 필요로 하는 데이터는 서버로부터 API등의 형태로 필요할 때마다 단편적으로 제공됨</li></ul></li></ul><h3 id="React"><a href="#React" class="headerlink" title="React"></a>React</h3><ul><li>사용자의 조작에 따라 사용자 인터페이스가 동적으로 변화하는 웹 애플리케이션을 개발할 수 있게 해주는 프론트엔드 라이브러리</li><li>A JavaScript libarary fpr building user interfaces</li></ul><h3 id="Angular"><a href="#Angular" class="headerlink" title="Angular"></a>Angular</h3><ul><li>강력한 명형행 도구와 잘 정돈된 폴더 구조, 프로젝트 생성과 동시에 각종 환경이 한번에 갖춰지는 등 필요한 기능을 모두 내장한 프론트엔드 프레임워크</li><li>Angular CLI 명령행 도구</li><li>내부적으로 RxJS 사용됨</li></ul><h3 id="Vue-js"><a href="#Vue-js" class="headerlink" title="Vue.js"></a>Vue.js</h3><ul><li>라이브러리적 측면과 프레임워크적인 측면을 동시에 갖는 프레임워크(프로그레시브 프레임워크)</li><li>React처럼 가상DOM을 가지면서도 React만큼 템플릿이 자바스크립트와 밀접하게 결합하지 않는다</li><li>단일 파일 컴포넌트 스타일</li><li>Vue CLI 지원</li></ul><h3 id="React-Native"><a href="#React-Native" class="headerlink" title="React Native"></a>React Native</h3><ul><li>React의 기술을 기반으로 모바일용 네이티브 애플리케이션을 개발하는 프레임워크</li><li>iOS, 안드로이드 모두 지원하는 애플리케이션 개발</li><li>네이티브 컴포넌트를 React의 JSX로 추상화하는 방식을 취함</li><li>A framework for building native apps with React</li></ul><h3 id="클라이언트-사이드-라우팅"><a href="#클라이언트-사이드-라우팅" class="headerlink" title="클라이언트 사이드 라우팅"></a>클라이언트 사이드 라우팅</h3><ul><li>URL 마다 화면을 만들어두거나 HTML5의 히스토리 API로 이전 버튼을 사용할 수 있게끔 해야한다.</li></ul><h3 id="CSS-in-JS"><a href="#CSS-in-JS" class="headerlink" title="CSS in JS"></a>CSS in JS</h3><ul><li>자바스크립트가 CSS 내장</li><li>여러 라이브러리에서 다른 작성법을 지원하지만 최종적으로 CSS로 변환되어 HTML에 적용</li></ul><h3 id="컴포넌트-지향"><a href="#컴포넌트-지향" class="headerlink" title="컴포넌트 지향"></a>컴포넌트 지향</h3><ul><li>애플리케이션의 기본 정보를 포함하는 페이지를 통째로 하나의 컴포넌트로 정의(루트 컴포넌트)</li><li>루트 컴포넌트 안에 다른 컴포넌트를 포함시키는 형태로 컴포넌트 간의 부모 관계 및 형제 관계를 형성 및 상호작용을 정의</li><li>컴포넌트 지향 애플리케이션을 구현할 땐 컴포넌트 단독으로 필요한 기능을 수행할 수 있는 스타일과 스크립트가 존재해야하기 때문에 캡슐화 사용</li></ul><h3 id="SSR-server-side-rendering-과-프리-렌더링"><a href="#SSR-server-side-rendering-과-프리-렌더링" class="headerlink" title="SSR(server-side rendering)과 프리 렌더링"></a>SSR(server-side rendering)과 프리 렌더링</h3><ul><li>일반적인 웹 애플리케이션에선 사용자가 브라우저를 통해 접근하는 콘텐츠가 이미 삽입된 HTML을 응답으로 받아온다.</li><li>SSR을 적용하면 서버에서 클라이언트로 전달되는 응답 결과에 이미 콘텐츠까지 렌더링을 마친 상태를 전달한다. 이를 구현하기 위해선 서버측에서 SPA에서 만들 렌더링 결과를 완성해야한다.</li><li>프리 렌더링은 요청이 들어왔을 때 대상이 크롤러인지 판단하여 크롤러인 경우 가상 브라우저로 접근하는 방식으로 생성한 다음 저장해둔 렌더링 결과를 제공하는 방식</li></ul><h3 id="가상-DOM-Virtual-DOM"><a href="#가상-DOM-Virtual-DOM" class="headerlink" title="가상 DOM(Virtual DOM)"></a>가상 DOM(Virtual DOM)</h3><ul><li>자바스크립트가 HTML을 렌더링하는 방법 중 하나이다. React에서 가상 DOM을 채택하고 주목받게 됨</li></ul><h3 id="웹-애플리케이션의-MVC"><a href="#웹-애플리케이션의-MVC" class="headerlink" title="웹 애플리케이션의 MVC"></a>웹 애플리케이션의 MVC</h3><ul><li>뷰: 어떻게 외부에 출력할지를 정의하는 부분. 전달형태는 HTML일수도 있고 JSON일수도 있다.</li><li>컨트롤러: URL 요청을 받을 때(라우팅) 필요에 따라 컨트롤러가 모델과 정보를 주고받은 다음 적절한 뷰를 골라 사용자에게 반환</li></ul><h3 id="프론트엔드-애플리케이션의-MV"><a href="#프론트엔드-애플리케이션의-MV" class="headerlink" title="프론트엔드 애플리케이션의 MV"></a>프론트엔드 애플리케이션의 MV</h3><ul><li>프론트엔드 애플리케이션에서 말하는 MV(Model-View)는 MVC 애플리케이션의 뷰 부분에 해당</li><li>웹 애플리케이션에선 본래 콘텐츠가 HTML에 포함된 채로 사용자에 응답을 주기 때문에 View안에 MV와 같은 구성을 할 필요가 없다. 그러나 SPA는 데이터 접근 계층이 추가되거나 URL을 요체하는 처리 등이 끼어들기에 필요하게 되었다.</li></ul><h3 id="MVP-패턴"><a href="#MVP-패턴" class="headerlink" title="MVP 패턴"></a>MVP 패턴</h3><ul><li>MV에 프리젠터(Presenter)가 추가된 패턴</li><li>모델과 뷰 사이에 프리젠터가 위치하여 양자 간의 입출력 인터페이스 역활을 맡는다.</li></ul><h2 id="자바스크립트-프론트엔드-개발을-위한-기초-지식-및-환경-구축"><a href="#자바스크립트-프론트엔드-개발을-위한-기초-지식-및-환경-구축" class="headerlink" title="자바스크립트 프론트엔드 개발을 위한 기초 지식 및 환경 구축"></a>자바스크립트 프론트엔드 개발을 위한 기초 지식 및 환경 구축</h2><h3 id="환경구축"><a href="#환경구축" class="headerlink" title="환경구축"></a>환경구축</h3><ul><li>Node.js 설치: nvm or n 이용</li><li>npm: -g, i, un</li><li>package.json 버전 지정<ul><li>major: 하위 호환성이 깨질 떄 숫자 올라감</li><li>minor: 하위 호환성이 유지되면서 새 기능이 추가될 대 숫자가 올라감</li><li>patch: 버그 수정 등에 숫자가 올라감</li><li>version<ul><li>틸드(~): 지정한 버전의 아래 자리가 최신인 버전으로 업데이트</li><li>캐럿(^): (하위 호환성 유지를 위해)  major 버전을 유지하고 그 이하 버전을 최신으로 업데이트</li><li>x, *, “ “: 와일드카드 문자, 해당하는 모든 버전 허용</li></ul></li></ul></li><li>package-lock.json: 설치된 패키지의 이름과 정확한 버전 정보를 파일에 기재(의존성 정보)</li></ul><h3 id="프론트엔드-빌드-도구"><a href="#프론트엔드-빌드-도구" class="headerlink" title="프론트엔드 빌드 도구"></a>프론트엔드 빌드 도구</h3><ul><li>여러개의 파일로 된 CSS나 자바스크립트를 파일 간 의존관계를 해소하고 하나의 파일로 정리해주는 도구(모듈 번들러) → 파일 요청 횟수 줄어듬</li><li>엔트리, 아웃풋, 로더, 플러그인 으로 구성됨<ul><li>엔트리<ul><li>엔트리(entry)는 webpack이 모듈의 의존관계를 해석하는 시작점이다. </li><li>엔트리로 지정된 자바스크립트 파일부터 모듈 번들링을 시작한다. 별도의 설정을 통해 하나 이상의 시작점을 지정할 수도 있다.</li></ul></li><li>아웃풋<ul><li>아웃풋(output)은 번들된 내용을 출력할 파일을 말한다.</li><li>파일 경로는 정대 경로로 설정해야 하므로 require로 절대 경로 정보를 확인하여 사용한다.</li></ul></li></ul></li></ul>]]></content:encoded>
      
      <comments>http://yoursite.com/2019/01/10/book-firststepsinfrontend/#disqus_thread</comments>
    </item>
    
    <item>
      <title>[delphi] 반각 전각 변환</title>
      <link>http://yoursite.com/2018/12/20/delphi-converthalfwidthfullwidth/</link>
      <guid>http://yoursite.com/2018/12/20/delphi-converthalfwidthfullwidth/</guid>
      <pubDate>Wed, 19 Dec 2018 15:00:00 GMT</pubDate>
      <description>
      
        
        
          &lt;h2 id=&quot;반각과-전각&quot;&gt;&lt;a href=&quot;#반각과-전각&quot; class=&quot;headerlink&quot; title=&quot;반각과 전각&quot;&gt;&lt;/a&gt;반각과 전각&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://namu.wiki/w/%EC%A0%84%EA%B0%81%
        
      
      </description>
      
      
      <content:encoded><![CDATA[<h2 id="반각과-전각"><a href="#반각과-전각" class="headerlink" title="반각과 전각"></a>반각과 전각</h2><ul><li><a href="https://namu.wiki/w/%EC%A0%84%EA%B0%81%EA%B3%BC%20%EB%B0%98%EA%B0%81?from=%EB%B0%98%EA%B0%81" target="_blank" rel="noopener">나무위키 설명</a></li></ul><h3 id="사용법1"><a href="#사용법1" class="headerlink" title="사용법1"></a>사용법1</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> ToFullWidth(Char: Char): Char;</span><br><span class="line">var</span><br><span class="line">  c: Integer;</span><br><span class="line">  i: Integer;</span><br><span class="line">begin</span><br><span class="line">  c := Ord(Char);</span><br><span class="line">  <span class="keyword">if</span> (c &gt;= <span class="variable">$21</span>) and (c &lt;= <span class="variable">$7E</span>) <span class="keyword">then</span> // 영문 알파벳 이거나 특수문자</span><br><span class="line">    c := c + <span class="variable">$FEE0</span></span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span> (c = <span class="variable">$20</span>) <span class="keyword">then</span> // 공백</span><br><span class="line">    c := <span class="variable">$3000</span>;</span><br><span class="line">  Result := Chr(c);</span><br><span class="line">end;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> ToHalfWidth(Char: Char): Char;</span><br><span class="line">var</span><br><span class="line">  c: Integer;</span><br><span class="line">  i: Integer;</span><br><span class="line">begin</span><br><span class="line">  c := Ord(Char);</span><br><span class="line">  <span class="keyword">if</span> (c &gt;= Ord(<span class="string">'！'</span>)) and (c &lt;= Ord(<span class="string">'～'</span>)) <span class="keyword">then</span></span><br><span class="line">    c := c - <span class="variable">$FEE0</span></span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span> (c = Ord(<span class="string">'　'</span>)) <span class="keyword">then</span></span><br><span class="line">    c := <span class="variable">$20</span>;</span><br><span class="line">  Result := Chr(c);</span><br><span class="line">end;</span><br></pre></td></tr></table></figure><h3 id="사용법2"><a href="#사용법2" class="headerlink" title="사용법2"></a>사용법2</h3><figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&#123; **</span></span><br><span class="line"><span class="comment">* Conversion 종류</span></span><br><span class="line"><span class="comment">* 상수                          의미</span></span><br><span class="line"><span class="comment">* LCMAP_BYTEREVWindows NT 만 : 바이트 순서를 반전합니다. 예를 들어 0x3450과 0x4822을 전달하면 결과는 0x5034과 0x2248입니다.</span></span><br><span class="line"><span class="comment">* CMAP_FULLWIDTH              :전각 문자합니다 (적용되는 경우).</span></span><br><span class="line"><span class="comment">* CMAP_HALFWIDTH              :반자합니다 (적용되는 경우).</span></span><br><span class="line"><span class="comment">* CMAP_HIRAGANA               :히라가나합니다.</span></span><br><span class="line"><span class="comment">* CMAP_KATAKANA               :카타카나합니다.</span></span><br><span class="line"><span class="comment">* CMAP_LINGUISTIC_CASING      :대소 문자 구분 파일 시스템의 규칙 (기본값) 대신 언어의 규칙을 사용합니다. LCMAP_LOWERCASE 또는 LCMAP_UPPERCASE와 만 함께 사용할 수 있습니다.</span></span><br><span class="line"><span class="comment">* CMAP_LOWERCASE              :소문자를 사용합니다.</span></span><br><span class="line"><span class="comment">* CMAP_SIMPLIFIED_CHINESE     :중국어 간체를 번체로 매핑합니다.</span></span><br><span class="line"><span class="comment">* CMAP_SORTKEY                :정규화 된 와이드 문자 정렬 키를 만듭니다.</span></span><br><span class="line"><span class="comment">* CMAP_TRADITIONAL_CHINESE    :중국어 번체를 간체로 매핑합니다.</span></span><br><span class="line"><span class="comment">* CMAP_UPPERCASE              :대문자를 사용합니다.</span></span><br><span class="line"><span class="comment">* ORM_IGNORECASE              :대소 문자를 구별하지 않습니다.</span></span><br><span class="line"><span class="comment">* ORM_IGNOREKANATYPE          :히라가나와 가타카나를 구분하지 않습니다. 히라가나와 가타카나를 동일한 것으로 간주합니다.</span></span><br><span class="line"><span class="comment">* ORM_IGNORENONSPACE          :보내없이 문자를 무시합니다. 이 플래그를 설정하면 일본어 악센트 문자도 삭제됩니다.</span></span><br><span class="line"><span class="comment">* ORM_IGNORESYMBOLS           :기호를 무시합니다.</span></span><br><span class="line"><span class="comment">* ORM_IGNOREWIDTH             :싱글 바이트 문자와 2 바이트 같은 문자를 구분하지 않습니다.</span></span><br><span class="line"><span class="comment">* ORT_STRINGORT               :구분 기호와 같은 것으로 취급합니다.</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* 참조</span></span><br><span class="line"><span class="comment">* http://mrxray.on.coocan.jp/Delphi/plSamples/881_ToHankakuKana.htm#04</span></span><br><span class="line"><span class="comment">* https://msdn.microsoft.com/ja-jp/library/cc448052.aspx</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">StrConv</span><span class="params">(<span class="keyword">const</span> sText: <span class="keyword">String</span>; Conversion: DWORD)</span>:</span> <span class="keyword">String</span>; <span class="keyword">overload</span>;</span><br><span class="line"><span class="keyword">var</span></span><br><span class="line">  nSize: Integer;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  nSize := LCMapString(LOCALE_SYSTEM_DEFAULT,</span><br><span class="line">                       Conversion,</span><br><span class="line">                       PChar(sText),</span><br><span class="line">                       Length(sText),</span><br><span class="line">                       <span class="keyword">nil</span>,</span><br><span class="line">                       <span class="number">0</span>);</span><br><span class="line">  SetLength(Result, nSize);</span><br><span class="line">  nSize := LCMapString(LOCALE_SYSTEM_DEFAULT,</span><br><span class="line">                       Conversion,</span><br><span class="line">                       PChar(sText),</span><br><span class="line">                       Length(sText),</span><br><span class="line">                       PChar(Result),</span><br><span class="line">                       nSize);</span><br><span class="line">  <span class="keyword">if</span> nSize &lt;= <span class="number">0</span> <span class="keyword">then</span></span><br><span class="line">    Result := sText</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">    SetLength(Result, nSize);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 전각</span></span><br><span class="line">Result := StrConv(sText, LCMAP_FULLWIDTH);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 반각</span></span><br><span class="line">Result := StrConv(Char, LCMAP_FULLWIDTH);</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>http://yoursite.com/2018/12/20/delphi-converthalfwidthfullwidth/#disqus_thread</comments>
    </item>
    
    <item>
      <title>[batch] Hyper-V 활성/비활성화</title>
      <link>http://yoursite.com/2018/06/11/batch-hyperv/</link>
      <guid>http://yoursite.com/2018/06/11/batch-hyperv/</guid>
      <pubDate>Sun, 10 Jun 2018 15:00:00 GMT</pubDate>
      <description>
      
        
        
          &lt;h2 id=&quot;Hyper-V-활성-비활성&quot;&gt;&lt;a href=&quot;#Hyper-V-활성-비활성&quot; class=&quot;headerlink&quot; title=&quot;Hyper-V 활성/비활성&quot;&gt;&lt;/a&gt;Hyper-V 활성/비활성&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;윈도우에서 vmware와 do
        
      
      </description>
      
      
      <content:encoded><![CDATA[<h2 id="Hyper-V-활성-비활성"><a href="#Hyper-V-활성-비활성" class="headerlink" title="Hyper-V 활성/비활성"></a>Hyper-V 활성/비활성</h2><ul><li>윈도우에서 vmware와 docker를 같이 사용할 때 충돌이 발생 할 수 있기에 사용에 따라 활성, 비활성화 해야한다.</li><li>Hyper-V / Vt-x 동시 사용불가</li><li>활성화: bcdedit /set hypervisorlaunchtype auto</li><li>비활성화 : bcdedit /set hypervisorlaunchtype off</li><li>설정 후엔 재부팅 필요</li></ul><h3 id="Batch-File"><a href="#Batch-File" class="headerlink" title="Batch File"></a>Batch File</h3><ul><li>관리자 권환 요청 후 Hyper-V 활성</li></ul><figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">@echo off</span><br><span class="line"> :: BatchGotAdmin</span><br><span class="line"> ::-------------------------------------</span><br><span class="line"> REM  --&gt; Check <span class="keyword">for</span> permissions</span><br><span class="line"> &gt;nul 2&gt;&amp;1 "%SYSTEMROOT%\system32\cacls.exe" "%SYSTEMROOT%\system32\config\system"</span><br><span class="line"></span><br><span class="line">REM --&gt; <span class="keyword">If</span> error flag <span class="keyword">set</span>, we <span class="keyword">do</span> <span class="keyword">not</span> have admin.</span><br><span class="line"> <span class="keyword">if</span> <span class="string">'%errorlevel%'</span> NEQ <span class="string">'0'</span> (</span><br><span class="line">     echo Requesting administrative privileges...</span><br><span class="line">     <span class="keyword">goto</span> UACPrompt</span><br><span class="line"> ) <span class="keyword">else</span> ( <span class="keyword">goto</span> gotAdmin )</span><br><span class="line"></span><br><span class="line">:UACPrompt</span><br><span class="line">     echo Set UAC = CreateObject^("Shell.Application"^) &gt; "%temp%\getadmin.vbs"</span><br><span class="line">     echo UAC.ShellExecute "%~s0", "", "", "runas", 1 &gt;&gt; "%temp%\getadmin.vbs"</span><br><span class="line"></span><br><span class="line">    "%temp%\getadmin.vbs"</span><br><span class="line">     <span class="keyword">exit</span> /B</span><br><span class="line"></span><br><span class="line">:gotAdmin</span><br><span class="line">     if exist "%temp%\getadmin.vbs" ( del "%temp%\getadmin.vbs" )</span><br><span class="line">     pushd "%CD%"</span><br><span class="line">     CD /D "%~dp0"</span><br><span class="line"> ::--------------------------------------  </span><br><span class="line"></span><br><span class="line">echo <span class="string">'HyperV Start'</span></span><br><span class="line">echo <span class="string">'BEGIN'</span></span><br><span class="line">bcdedit /<span class="keyword">set</span> hypervisorlaunchtype auto</span><br><span class="line">echo <span class="string">'END'</span></span><br><span class="line"></span><br><span class="line">pause</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>http://yoursite.com/2018/06/11/batch-hyperv/#disqus_thread</comments>
    </item>
    
    <item>
      <title>[delphi] TTask 와 for문</title>
      <link>http://yoursite.com/2018/06/11/delphi-ttask-for/</link>
      <guid>http://yoursite.com/2018/06/11/delphi-ttask-for/</guid>
      <pubDate>Sun, 10 Jun 2018 15:00:00 GMT</pubDate>
      <description>
      
        
        
          &lt;h2 id=&quot;TTask&quot;&gt;&lt;a href=&quot;#TTask&quot; class=&quot;headerlink&quot; title=&quot;TTask&quot;&gt;&lt;/a&gt;TTask&lt;/h2&gt;&lt;p&gt;  TTask는 매개 변수 없이 프로시저 함수만 허용하지만 실제 개발에선 매개 변수를 전달해야 할 경우가
        
      
      </description>
      
      
      <content:encoded><![CDATA[<h2 id="TTask"><a href="#TTask" class="headerlink" title="TTask"></a>TTask</h2><p>  TTask는 매개 변수 없이 프로시저 함수만 허용하지만 실제 개발에선 매개 변수를 전달해야 할 경우가 있음.<br>  for문으로 테스트</p><h3 id="일반적인-사용법"><a href="#일반적인-사용법" class="headerlink" title="일반적인 사용법"></a>일반적인 사용법</h3><figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">TForm5</span>.<span class="title">Button1Click</span><span class="params">(Sender: TObject)</span>;</span></span><br><span class="line"><span class="keyword">var</span></span><br><span class="line">  tasks: TArray&lt;ITask&gt;;</span><br><span class="line">  i: Integer;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  SetLength(tasks, <span class="number">3</span>);</span><br><span class="line">  <span class="keyword">for</span> i := <span class="number">0</span> <span class="keyword">to</span> Length(tasks) -<span class="number">1</span> <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    tasks[i] := TTask.Run(</span><br><span class="line">      <span class="function"><span class="keyword">procedure</span></span></span><br><span class="line"><span class="function">      <span class="title">begin</span></span></span><br><span class="line"><span class="function">        <span class="title">OutputdebugString</span><span class="params">(PChar(IntToStr(i)</span>));</span></span><br><span class="line">      <span class="keyword">end</span>);</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  TTask.WaitForAll(tasks);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line">Result</span><br><span class="line">------</span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line">------</span><br></pre></td></tr></table></figure><h3 id="매개-변수-전달-1"><a href="#매개-변수-전달-1" class="headerlink" title="매개 변수 전달 1"></a>매개 변수 전달 1</h3><figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">TForm5</span>.<span class="title">Button1Click</span><span class="params">(Sender: TObject)</span>;</span></span><br><span class="line"><span class="keyword">var</span></span><br><span class="line">  tasks: TArray&lt;ITask&gt;;</span><br><span class="line">  procInt: TProc&lt;Integer&gt;;</span><br><span class="line">  i: Integer;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  SetLength(tasks, <span class="number">3</span>);</span><br><span class="line">  <span class="keyword">for</span> i := <span class="number">0</span> <span class="keyword">to</span> Length(tasks) -<span class="number">1</span> <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    procInt := <span class="function"><span class="keyword">procedure</span> <span class="params">(i: Integer)</span></span></span><br><span class="line"><span class="function">      <span class="title">begin</span></span></span><br><span class="line"><span class="function">        <span class="title">tasks</span>[<span class="title">i</span>] :</span>= TTask.Run(</span><br><span class="line">          <span class="function"><span class="keyword">procedure</span></span></span><br><span class="line"><span class="function">          <span class="title">begin</span></span></span><br><span class="line"><span class="function">            <span class="title">OutputdebugString</span><span class="params">(PChar(IntToStr(i)</span>));</span></span><br><span class="line">          <span class="keyword">end</span>);</span><br><span class="line">      <span class="keyword">end</span>;</span><br><span class="line">    procInt(i)</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  TTask.WaitForAll(tasks);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line">Result</span><br><span class="line">------</span><br><span class="line"><span class="number">0</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line">------</span><br></pre></td></tr></table></figure><h3 id="매개-변수-전달-2"><a href="#매개-변수-전달-2" class="headerlink" title="매개 변수 전달 2"></a>매개 변수 전달 2</h3><figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">unit</span> Unit8;</span><br><span class="line"></span><br><span class="line"><span class="keyword">interface</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">uses</span></span><br><span class="line">  System.Threading, System.Generics.Collections,</span><br><span class="line">  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,</span><br><span class="line">  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.StdCtrls;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span></span><br><span class="line">  <span class="title">TForm8</span> = <span class="keyword">class</span>(TForm)</span><br><span class="line">    Button1: TButton;</span><br><span class="line">    <span class="function"><span class="keyword">procedure</span> <span class="title">Button1Click</span><span class="params">(Sender: TObject)</span>;</span></span><br><span class="line">  <span class="keyword">private</span></span><br><span class="line">    <span class="comment">&#123; Private declarations &#125;</span></span><br><span class="line">  <span class="keyword">public</span></span><br><span class="line">    <span class="comment">&#123; Public declarations &#125;</span></span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span></span><br><span class="line">  TTaskWork = <span class="keyword">class</span></span><br><span class="line"> <span class="keyword">private</span></span><br><span class="line">    m_nInt: Integer;</span><br><span class="line">    <span class="function"><span class="keyword">procedure</span> <span class="title">Execute</span>;</span></span><br><span class="line">  <span class="keyword">public</span></span><br><span class="line">    <span class="function"><span class="keyword">constructor</span> <span class="title">Create</span><span class="params">(nInt: Integer)</span>;</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">Start</span>:</span> ITask;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span></span><br><span class="line">  Form8: TForm8;</span><br><span class="line"></span><br><span class="line"><span class="keyword">implementation</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&#123;$R *.dfm&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">TForm8</span>.<span class="title">Button1Click</span><span class="params">(Sender: TObject)</span>;</span></span><br><span class="line"><span class="keyword">var</span></span><br><span class="line">  list: TObjectList&lt;TTaskWork&gt;;</span><br><span class="line">  tasks: TArray&lt;ITask&gt;;</span><br><span class="line">  i: Integer;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  list := TObjectList&lt;TTaskWork&gt;.Create;</span><br><span class="line">  <span class="keyword">for</span> i := <span class="number">0</span> <span class="keyword">to</span> <span class="number">2</span> <span class="keyword">do</span></span><br><span class="line">    list.Add(TTaskWork.Create(i));</span><br><span class="line"></span><br><span class="line">  SetLength(tasks, list.Count);</span><br><span class="line">  <span class="keyword">for</span> i := <span class="number">0</span> <span class="keyword">to</span> list.Count - <span class="number">1</span> <span class="keyword">do</span></span><br><span class="line">    tasks[i] := list[i].Start;</span><br><span class="line"></span><br><span class="line">  TTask.WaitForAll(tasks);</span><br><span class="line">  list.Free;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">&#123; TTaskWork &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">constructor</span> <span class="title">TTaskWork</span>.<span class="title">Create</span><span class="params">(nInt: Integer)</span>;</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  m_nInt := nInt;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">TTaskWork</span>.<span class="title">Execute</span>;</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  OutputdebugString(PChar(IntToStr(m_nInt)));</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">TTaskWork</span>.<span class="title">Start</span>:</span> ITask;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  Result := TTask.Run(Execute);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">end</span>.</span><br><span class="line"></span><br><span class="line">Result</span><br><span class="line">------</span><br><span class="line"><span class="number">0</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line">------</span><br></pre></td></tr></table></figure><h3 id="매개-변수-전달-3"><a href="#매개-변수-전달-3" class="headerlink" title="매개 변수 전달 3"></a>매개 변수 전달 3</h3><figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">unit</span> Unit6;</span><br><span class="line"></span><br><span class="line"><span class="keyword">interface</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">uses</span></span><br><span class="line">  Winapi.Windows, System.SysUtils, System.Classes, System.Generics.Collections;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">InitTasks</span>;</span></span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">AddTask</span><span class="params">(nInt: Integer)</span>;</span></span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">RunTasks</span>;</span></span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">WaitTask</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">implementation</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">uses</span></span><br><span class="line">  System.Threading;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span></span><br><span class="line">  TTaskWork = <span class="keyword">class</span></span><br><span class="line"> <span class="keyword">private</span></span><br><span class="line">    m_nInt: Integer;</span><br><span class="line">    <span class="function"><span class="keyword">procedure</span> <span class="title">Execute</span>;</span></span><br><span class="line">  <span class="keyword">public</span></span><br><span class="line">    <span class="function"><span class="keyword">constructor</span> <span class="title">Create</span><span class="params">(nInt: Integer)</span>;</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">Start</span>:</span> ITask;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span></span><br><span class="line">  m_Objectlist: TObjectList&lt;TTaskWork&gt;;</span><br><span class="line">  m_Tasks: TArray&lt;ITask&gt;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">InitTasks</span>;</span></span><br><span class="line"><span class="keyword">var</span></span><br><span class="line">  i: Integer;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">for</span> i := m_Objectlist.Count -<span class="number">1</span> <span class="keyword">downto</span> <span class="number">0</span> <span class="keyword">do</span></span><br><span class="line">    m_Objectlist.Items[i].Free;</span><br><span class="line"></span><br><span class="line">  m_Objectlist.Clear;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">AddTask</span><span class="params">(nInt: Integer)</span>;</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  m_Objectlist.Add(TTaskWork.Create(nInt));</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">RunTasks</span>;</span></span><br><span class="line"><span class="keyword">var</span></span><br><span class="line">  i: Integer;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  SetLength(m_Tasks, m_Objectlist.Count);</span><br><span class="line">  <span class="keyword">for</span> i := <span class="number">0</span> <span class="keyword">to</span> m_Objectlist.Count -<span class="number">1</span> <span class="keyword">do</span></span><br><span class="line">    m_Tasks[i] := m_Objectlist[i].Start;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">WaitTask</span>;</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  TTask.WaitForAll(m_Tasks);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">&#123; TTaskWork &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">constructor</span> <span class="title">TTaskWork</span>.<span class="title">Create</span><span class="params">(nInt: Integer)</span>;</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  m_nInt := nInt;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">TTaskWork</span>.<span class="title">Execute</span>;</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  OutputdebugString(PChar(IntToStr(m_nInt)));</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">TTaskWork</span>.<span class="title">Start</span>:</span> ITask;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  Result := TTask.Run(Execute);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">initialization</span></span><br><span class="line">  m_Objectlist := TObjectList&lt;TTaskWork&gt;.Create;</span><br><span class="line"></span><br><span class="line"><span class="keyword">finalization</span></span><br><span class="line">  m_Objectlist.Free;</span><br><span class="line"></span><br><span class="line"><span class="keyword">end</span>.</span><br></pre></td></tr></table></figure><figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">unit</span> Unit9;</span><br><span class="line"></span><br><span class="line"><span class="keyword">interface</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">uses</span></span><br><span class="line">  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,</span><br><span class="line">  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.StdCtrls;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span></span><br><span class="line">  <span class="title">TForm9</span> = <span class="keyword">class</span>(TForm)</span><br><span class="line">    Button1: TButton;</span><br><span class="line">    <span class="function"><span class="keyword">procedure</span> <span class="title">Button1Click</span><span class="params">(Sender: TObject)</span>;</span></span><br><span class="line">  <span class="keyword">private</span></span><br><span class="line">    <span class="comment">&#123; Private declarations &#125;</span></span><br><span class="line">  <span class="keyword">public</span></span><br><span class="line">    <span class="comment">&#123; Public declarations &#125;</span></span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span></span><br><span class="line">  Form9: TForm9;</span><br><span class="line"></span><br><span class="line"><span class="keyword">implementation</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">uses</span></span><br><span class="line">  Unit6;</span><br><span class="line"></span><br><span class="line"><span class="meta">&#123;$R *.dfm&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">TForm9</span>.<span class="title">Button1Click</span><span class="params">(Sender: TObject)</span>;</span></span><br><span class="line"><span class="keyword">var</span></span><br><span class="line">  i: Integer;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  InitTasks;</span><br><span class="line">  <span class="keyword">for</span> i := <span class="number">0</span> <span class="keyword">to</span> <span class="number">2</span> <span class="keyword">do</span></span><br><span class="line">    AddTask(i);</span><br><span class="line">  RunTasks;</span><br><span class="line">  WaitTask;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">end</span>.</span><br><span class="line"></span><br><span class="line">Result</span><br><span class="line">------</span><br><span class="line"><span class="number">0</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line">------</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>http://yoursite.com/2018/06/11/delphi-ttask-for/#disqus_thread</comments>
    </item>
    
    <item>
      <title>[delphi] Ellipsis Label</title>
      <link>http://yoursite.com/2018/06/11/delphi-ellipsislabel/</link>
      <guid>http://yoursite.com/2018/06/11/delphi-ellipsislabel/</guid>
      <pubDate>Sun, 10 Jun 2018 15:00:00 GMT</pubDate>
      <description>
      
        
        
          &lt;h3 id=&quot;code&quot;&gt;&lt;a href=&quot;#code&quot; class=&quot;headerlink&quot; title=&quot;code&quot;&gt;&lt;/a&gt;code&lt;/h3&gt;&lt;figure class=&quot;highlight delphi&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;p
        
      
      </description>
      
      
      <content:encoded><![CDATA[<h3 id="code"><a href="#code" class="headerlink" title="code"></a>code</h3><figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">SetEllipsisLabel</span><span class="params">(l: TLabel)</span>;</span></span><br><span class="line"><span class="keyword">var</span></span><br><span class="line">  s: <span class="keyword">String</span>;</span><br><span class="line">  R: TRect;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  s := l.Caption;</span><br><span class="line">  UniqueString(s);</span><br><span class="line">  R := l.ClientRect;</span><br><span class="line">  l.Canvas.Font := l.Font;</span><br><span class="line">  DrawText(l.Canvas.Handle, PChar(s), Length(s), R, DT_END_ELLIPSIS <span class="keyword">or</span> DT_MODIFYSTRING <span class="keyword">or</span> DT_NOPREFIX);</span><br><span class="line">  l.Caption := s;</span><br><span class="line"><span class="keyword">end</span>;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>http://yoursite.com/2018/06/11/delphi-ellipsislabel/#disqus_thread</comments>
    </item>
    
    <item>
      <title>[delphi] TWebbrowser 내 javascript 에서 delphi 함수 호출</title>
      <link>http://yoursite.com/2018/06/11/delphi-calldelfuncfromjs/</link>
      <guid>http://yoursite.com/2018/06/11/delphi-calldelfuncfromjs/</guid>
      <pubDate>Sun, 10 Jun 2018 15:00:00 GMT</pubDate>
      <description>
      
        
        
          &lt;h2 id=&quot;자바스크립트에서-델파이-함수-호출&quot;&gt;&lt;a href=&quot;#자바스크립트에서-델파이-함수-호출&quot; class=&quot;headerlink&quot; title=&quot;자바스크립트에서 델파이 함수 호출&quot;&gt;&lt;/a&gt;자바스크립트에서 델파이 함수 호출&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;
        
      
      </description>
      
      
      <content:encoded><![CDATA[<h2 id="자바스크립트에서-델파이-함수-호출"><a href="#자바스크립트에서-델파이-함수-호출" class="headerlink" title="자바스크립트에서 델파이 함수 호출"></a>자바스크립트에서 델파이 함수 호출</h2><ul><li>TWebbrowser를 활용하다보면 델파이 함수를 웹페이지에서 호출해야할 필요가 생긴다.</li><li><a href="http://blog.hjf.pe.kr/378" target="_blank" rel="noopener">파이어몽키에서는 컴포넌트 메소드를 통해 이벤트를 가져올 수 있어보인다.</a></li><li><a href="https://www.delmadang.com/community/bbs_view.asp?bbsNo=21&bbsCat=0&st=S&keyword=%uC790%uBC14%uC2A4%uD06C%uB9BD%uD2B8&indx=449443&keyword1=%C0%DA%B9%D9%BD%BA%C5%A9%B8%B3%C6%AE&page=1%20%20%EA%B7%B8%EB%A6%AC%EA%B3%A0%20%EC%A7%88%EB%8B%B5%EB%9E%80%EC%9D%98%20%EC%98%81%ED%9B%88%EB%8B%98%EC%9D%98%20%EB%8B%B5%EB%B3%80%20%EC%B0%B8%EA%B3%A0%ED%95%98%EC%84%B8%EC%9A%94.%20https://www.delmadang.com/community/bbs_view.asp?bbsNo=17&bbsCat=0&st=C&keyword=twebbrowser&indx=440673&keyword1=twebbrowser&page=2" target="_blank" rel="noopener">검색하면 델파이를 통해 자바스크립트를 사용하는 방법 위주로 나오는 듯하다.</a></li><li><a href="http://delphidabbler.com/articles?article=22&part=4" target="_blank" rel="noopener">정석(?)은 com과 같이 외부객체를 활용하는 방법으로 보이는데…</a></li><li>살펴보니 TWebbrowser 상태 프로퍼티를 활용하는 꼼수적인 방법이 있다. </li><li>방법은 자바스크립트 이벤트를 통해 상태 텍스트를 변경, TWebbrowser에선 상태 텍스트의 변경 이벤트를 확인 후 변경된 상태 텍스트을 활용하여 원하는 델파이 핸들 내 함수명과 일치된 함수를 실행한다.</li></ul><h2 id="code"><a href="#code" class="headerlink" title="code"></a>code</h2><ul><li><p>index.html</p><figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"> &lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset="utf-8"&gt;</span><br><span class="line">    &lt;script language="javascript"&gt;</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">DelMessage</span><span class="params">()</span> <span class="comment">&#123;</span></span></span><br><span class="line"><span class="function"><span class="comment">            window.status = 'delFunc_Message';</span></span></span><br><span class="line"><span class="function"><span class="comment">            window.status = '';</span></span></span><br><span class="line"><span class="function"><span class="comment">        &#125;</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">        <span class="title">function</span> <span class="title">DelForm</span><span class="params">()</span> <span class="comment">&#123;</span></span></span><br><span class="line"><span class="function"><span class="comment">            window.status = 'delFunc_Form';</span></span></span><br><span class="line"><span class="function"><span class="comment">            window.status = '';</span></span></span><br><span class="line"><span class="function"><span class="comment">        &#125;</span></span></span><br><span class="line"><span class="function">        <span class="title">function</span> <span class="title">DelMainMessage</span><span class="params">()</span> <span class="comment">&#123;</span></span></span><br><span class="line"><span class="function"><span class="comment">            window.status = 'delFunc_MainMessage';</span></span></span><br><span class="line"><span class="function"><span class="comment">            window.status = '';</span></span></span><br><span class="line"><span class="function"><span class="comment">        &#125;</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">        <span class="title">function</span> <span class="title">DelMainForm</span><span class="params">()</span> <span class="comment">&#123;</span></span></span><br><span class="line"><span class="function"><span class="comment">            window.status = 'delFunc_MainForm';</span></span></span><br><span class="line"><span class="function"><span class="comment">            window.status = '';</span></span></span><br><span class="line"><span class="function"><span class="comment">        &#125;</span></span></span><br><span class="line"><span class="function">    &lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"><span class="function">&lt;/<span class="title">head</span>&gt;</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">&lt;<span class="title">body</span>&gt;</span></span><br><span class="line"><span class="function">    &lt;<span class="title">input</span> <span class="title">type</span>="<span class="title">button</span>" <span class="title">value</span>="나와라 델파이 <span class="title">TCallFunc</span> 메시지" <span class="title">onclick</span>='<span class="title">DelMessage</span><span class="params">()</span>'&gt;</span></span><br><span class="line"><span class="function">    &lt;<span class="title">input</span> <span class="title">type</span>="<span class="title">button</span>" <span class="title">value</span>="나와라 델파이 <span class="title">TCallFunc</span> 폼" <span class="title">onclick</span>='<span class="title">DelForm</span><span class="params">()</span>'&gt;</span></span><br><span class="line"><span class="function">    &lt;<span class="title">input</span> <span class="title">type</span>="<span class="title">button</span>" <span class="title">value</span>="나와라 델파이 메인 메시지" <span class="title">onclick</span>='<span class="title">DelMainMessage</span><span class="params">()</span>'&gt;</span></span><br><span class="line"><span class="function">    &lt;<span class="title">input</span> <span class="title">type</span>="<span class="title">button</span>" <span class="title">value</span>="나와라 델파이 메인 폼" <span class="title">onclick</span>='<span class="title">DelMainForm</span><span class="params">()</span>'&gt;</span></span><br><span class="line"><span class="function">&lt;/<span class="title">body</span>&gt;</span></span><br><span class="line"><span class="function">&lt;/<span class="title">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>Main.pas</p><figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">unit</span> Main;</span><br><span class="line"></span><br><span class="line"><span class="keyword">interface</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">uses</span></span><br><span class="line">  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,</span><br><span class="line">  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.OleCtrls, SHDocVw, Vcl.StdCtrls,</span><br><span class="line">  Vcl.ExtCtrls, Vcl.ComCtrls;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span></span><br><span class="line">  <span class="title">TFMain</span> = <span class="keyword">class</span>(TForm)</span><br><span class="line">    pnl: TPanel;</span><br><span class="line">    btnMsg: TButton;</span><br><span class="line">    btnForm: TButton;</span><br><span class="line">    mmoLog: TMemo;</span><br><span class="line">    Splitter1: TSplitter;</span><br><span class="line">    PageControl1: TPageControl;</span><br><span class="line">    TabSheet1: TTabSheet;</span><br><span class="line">    wbs: TWebBrowser;</span><br><span class="line">    <span class="function"><span class="keyword">procedure</span> <span class="title">FormCreate</span><span class="params">(Sender: TObject)</span>;</span></span><br><span class="line">    <span class="function"><span class="keyword">procedure</span> <span class="title">wbsStatusTextChange</span><span class="params">(ASender: TObject; <span class="keyword">const</span> Text: WideString)</span>;</span></span><br><span class="line">    <span class="function"><span class="keyword">procedure</span> <span class="title">btnFormClick</span><span class="params">(Sender: TObject)</span>;</span></span><br><span class="line">    <span class="function"><span class="keyword">procedure</span> <span class="title">btnMsgClick</span><span class="params">(Sender: TObject)</span>;</span></span><br><span class="line">  <span class="keyword">private</span></span><br><span class="line">    <span class="comment">&#123; Private declarations &#125;</span></span><br><span class="line">    <span class="function"><span class="keyword">procedure</span> <span class="title">AddLog</span><span class="params">(s: <span class="keyword">String</span>)</span>;</span></span><br><span class="line">  <span class="keyword">public</span></span><br><span class="line">    <span class="comment">&#123; Public declarations &#125;</span></span><br><span class="line">  <span class="keyword">published</span></span><br><span class="line">    <span class="function"><span class="keyword">procedure</span> <span class="title">delFunc_MainMessage</span>;</span></span><br><span class="line">    <span class="function"><span class="keyword">procedure</span> <span class="title">delFunc_MainForm</span>;</span></span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span></span><br><span class="line">  FMain: TFMain;</span><br><span class="line"></span><br><span class="line"><span class="keyword">implementation</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">uses</span></span><br><span class="line">  UCommon, UCallFunc;</span><br><span class="line"></span><br><span class="line"><span class="meta">&#123;$R *.dfm&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">TFMain</span>.<span class="title">AddLog</span><span class="params">(s: <span class="keyword">String</span>)</span>;</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  mmoLog.Lines.Add(s);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">TFMain</span>.<span class="title">btnFormClick</span><span class="params">(Sender: TObject)</span>;</span></span><br><span class="line"><span class="keyword">var</span></span><br><span class="line">  f: TForm;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  f := TForm.Create(<span class="keyword">nil</span>);</span><br><span class="line">  f.Caption := <span class="string">'메인 폼'</span>;</span><br><span class="line">  f.ShowModal;</span><br><span class="line">  f.Free;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">TFMain</span>.<span class="title">btnMsgClick</span><span class="params">(Sender: TObject)</span>;</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  ShowMessage(<span class="string">'메인 메시지'</span>);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">TFMain</span>.<span class="title">delFunc_MainForm</span>;</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  btnForm.Click;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">TFMain</span>.<span class="title">delFunc_MainMessage</span>;</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  btnMsg.Click;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">TFMain</span>.<span class="title">FormCreate</span><span class="params">(Sender: TObject)</span>;</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  wbs.Navigate2(ExtractFilePath(Application.ExeName) + <span class="string">'index.html'</span>);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">TFMain</span>.<span class="title">wbsStatusTextChange</span><span class="params">(ASender: TObject; <span class="keyword">const</span> Text: WideString)</span>;</span></span><br><span class="line"><span class="keyword">const</span></span><br><span class="line">  CST_DEL_FUNC = <span class="string">'delFunc_'</span>;</span><br><span class="line"><span class="keyword">var</span></span><br><span class="line">  sFuncName: <span class="keyword">String</span>;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  sFuncName := Text;</span><br><span class="line">  <span class="keyword">if</span> Pos(CST_DEL_FUNC, sFuncName) = <span class="number">0</span> <span class="keyword">then</span> <span class="keyword">Exit</span>;</span><br><span class="line"></span><br><span class="line">  AddLog(<span class="string">'Web Status: '</span> + <span class="keyword">String</span>(Text));</span><br><span class="line">  SetTimeOut( <span class="function"><span class="keyword">procedure</span></span></span><br><span class="line"><span class="function">    <span class="title">begin</span></span></span><br><span class="line"><span class="function">      <span class="comment">// 사용할 함수가 있는 클래스를 넘겨줘야한다.</span></span></span><br><span class="line"><span class="function">      <span class="title">CallMethod</span><span class="params">(g_CallFunc, sFuncName)</span></span></span><br><span class="line"><span class="function"><span class="comment">//      CallMethod(Self, sFuncName)</span></span></span><br><span class="line"><span class="function">    <span class="title">end</span>, 1);</span></span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">end</span>.</span><br></pre></td></tr></table></figure></li><li><p>UCallFunc.pas</p><figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">unit</span> UCallFunc;</span><br><span class="line"></span><br><span class="line"><span class="keyword">interface</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">uses</span></span><br><span class="line">  Vcl.Dialogs, Vcl.Forms;</span><br><span class="line"></span><br><span class="line"><span class="meta">&#123;$M+&#125;</span></span><br><span class="line"><span class="keyword">type</span></span><br><span class="line">  TCallFunc = <span class="keyword">class</span></span><br><span class="line">  <span class="keyword">private</span></span><br><span class="line">  <span class="keyword">public</span></span><br><span class="line">  <span class="keyword">published</span></span><br><span class="line">    <span class="function"><span class="keyword">procedure</span> <span class="title">delFunc_Message</span>;</span></span><br><span class="line">    <span class="function"><span class="keyword">procedure</span> <span class="title">delFunc_Form</span>;</span></span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line"><span class="meta">&#123;$M-&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span></span><br><span class="line">  g_CallFunc: TCallFunc;</span><br><span class="line"></span><br><span class="line"><span class="keyword">implementation</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&#123; TCallFunc &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">TCallFunc</span>.<span class="title">delFunc_Form</span>;</span></span><br><span class="line"><span class="keyword">var</span></span><br><span class="line">  f: TForm;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  f := TForm.Create(<span class="keyword">nil</span>);</span><br><span class="line">  f.Caption := <span class="string">'TCallFunc 폼'</span>;</span><br><span class="line">  f.ShowModal;</span><br><span class="line">  f.Free;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">TCallFunc</span>.<span class="title">delFunc_Message</span>;</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  ShowMessage(<span class="string">'TCallFunc 메시지 테스트'</span>);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">initialization</span></span><br><span class="line">  g_CallFunc := TCallFunc.Create;</span><br><span class="line"></span><br><span class="line"><span class="keyword">finalization</span></span><br><span class="line">  g_CallFunc.Free;</span><br><span class="line"></span><br><span class="line"><span class="keyword">end</span>.</span><br></pre></td></tr></table></figure></li><li><p>UCommon.pas</p><figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">unit</span> UCommon;</span><br><span class="line"></span><br><span class="line"><span class="keyword">interface</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">uses</span></span><br><span class="line">  System.SysUtils, System.Classes, System.Threading, System.Rtti;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">SetTimeOut</span><span class="params">(proc: TProc; nInterval: Integer = 100)</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 함수 이름으로 함수 호출</span></span><br><span class="line"><span class="comment">// 취향것 사용</span></span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">CallMethod</span><span class="params">(obj: TObject; AMethodName: <span class="keyword">string</span>)</span>;</span> <span class="keyword">overload</span>;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">CallMethod</span><span class="params">(obj: TObject; AMethodName: <span class="keyword">string</span>; AParameters: TArray&lt;TValue&gt;)</span>:</span> TValue; <span class="keyword">overload</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">implementation</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">SetTimeOut</span><span class="params">(proc: TProc; nInterval: Integer = 100)</span>;</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  TThread.CreateAnonymousThread( <span class="function"><span class="keyword">procedure</span></span></span><br><span class="line"><span class="function">    <span class="title">begin</span></span></span><br><span class="line"><span class="function">    <span class="title">Sleep</span><span class="params">(nInterval)</span>;</span></span><br><span class="line">  <span class="comment">// 내부 코드</span></span><br><span class="line">    TThread.Synchronize( TThread.CurrentThread, <span class="function"><span class="keyword">procedure</span></span></span><br><span class="line"><span class="function">      <span class="title">begin</span></span></span><br><span class="line"><span class="function">    <span class="comment">// GUI 코드</span></span></span><br><span class="line"><span class="function">        <span class="title">proc</span></span></span><br><span class="line"><span class="function">      <span class="title">end</span>);</span></span><br><span class="line">    <span class="keyword">end</span>).Start;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">CallMethod</span><span class="params">(obj: TObject; AMethodName: <span class="keyword">string</span>)</span>;</span></span><br><span class="line"><span class="keyword">type</span></span><br><span class="line">  TExecute = <span class="function"><span class="keyword">procedure</span> <span class="title">of</span> <span class="title">object</span>;</span></span><br><span class="line"><span class="keyword">var</span></span><br><span class="line">  e: TExecute;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  TMethod(e).Data := obj;</span><br><span class="line">  TMethod(e).Code := obj.MethodAddress(AMethodName);</span><br><span class="line">  <span class="keyword">if</span> Assigned(e) <span class="keyword">then</span> e;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">CallMethod</span><span class="params">(obj: TObject; AMethodName: <span class="keyword">string</span>; AParameters: TArray&lt;TValue&gt;)</span>:</span> TValue;</span><br><span class="line"><span class="comment">&#123;</span></span><br><span class="line"><span class="comment">// IF문을 사용하는 방식</span></span><br><span class="line"><span class="comment">begin</span></span><br><span class="line"><span class="comment">  if AMethodName = 'callDelphiMethodFromJS' then</span></span><br><span class="line"><span class="comment">    callDelphiMethodFromJS</span></span><br><span class="line"><span class="comment">  else if AMethodName = 'callDelphiMethodFromJSWithParam' then</span></span><br><span class="line"><span class="comment">    callDelphiMethodFromJSWithParam(AParameters[0].AsString, AParameters[1].AsString);</span></span><br><span class="line"><span class="comment">end;</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">// RTTI로 메소드이름으로 메소드 호출하는 방식(published, public 으로 메소드가 선언되야함)</span></span><br><span class="line"><span class="keyword">var</span></span><br><span class="line">  RttiCtx: TRttiContext;</span><br><span class="line">  RttiTyp: TRttiType;</span><br><span class="line">  RttiMtd: TRttiMethod;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  RttiCtx := TRttiContext.Create;</span><br><span class="line">  RttiTyp := RttiCtx.GetType(obj.ClassInfo);</span><br><span class="line">  RttiMtd := <span class="keyword">nil</span>;</span><br><span class="line">  <span class="keyword">if</span> Assigned(RttiTyp) <span class="keyword">then</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    RttiMtd := RttiTyp.GetMethod(AMethodName);</span><br><span class="line">    <span class="keyword">if</span> Assigned(RttiMtd) <span class="keyword">then</span></span><br><span class="line">      Result := RttiMtd.Invoke(obj, AParameters);</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  RttiMtd.Free;</span><br><span class="line">  RttiTyp.Free;</span><br><span class="line">  RttiCtx.Free;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">end</span>.</span><br></pre></td></tr></table></figure></li></ul><h2 id="source"><a href="#source" class="headerlink" title="source"></a>source</h2><p><a href="https://github.com/ggi88/SampleProject/tree/master/Delphi/XE8/CallDelFuncFromJS" target="_blank" rel="noopener">CallDelphiFunctionFromJavascript</a></p>]]></content:encoded>
      
      <comments>http://yoursite.com/2018/06/11/delphi-calldelfuncfromjs/#disqus_thread</comments>
    </item>
    
    <item>
      <title>[network] DNP3(Distriuted Network Protocol 3)</title>
      <link>http://yoursite.com/2018/04/19/network-dnp3/</link>
      <guid>http://yoursite.com/2018/04/19/network-dnp3/</guid>
      <pubDate>Wed, 18 Apr 2018 15:00:00 GMT</pubDate>
      <description>
      
        
        
          &lt;h2 id=&quot;DNP3-Distriuted-Network-Protocol-3&quot;&gt;&lt;a href=&quot;#DNP3-Distriuted-Network-Protocol-3&quot; class=&quot;headerlink&quot; title=&quot;DNP3 (Distriuted Network
        
      
      </description>
      
      
      <content:encoded><![CDATA[<h2 id="DNP3-Distriuted-Network-Protocol-3"><a href="#DNP3-Distriuted-Network-Protocol-3" class="headerlink" title="DNP3 (Distriuted Network Protocol 3)"></a>DNP3 (Distriuted Network Protocol 3)</h2><ul><li>DNP3는 현장제어장치와 중앙 운영 센터 사이에서 수집된 데이터 정보와 제어 메시지의 전송에 최적화되어 설계된 표준 통신 프로토콜<ul><li>2010년 7월 DNP Technical Committee 와 IEEE Std 1815-2010을 통해 DNP3를 발표</li><li>2012년 10월, IEEE Std 1815-2012를 통해 DNP3의 많은 부분이 업데이트, DNP3 Secure Authentication v5 포함</li></ul></li></ul><h3 id="format"><a href="#format" class="headerlink" title="format"></a>format</h3><pre>- DNP3+----------+-----------+-------------+| DataLink | Transport | Application |+----------+-----------+-------------+|10        | 1         | n           | Byte+----------+-----------+-------------+- DataLink+--------+--------+---------+-------------+--------+-----+| Header | Length | Control | Destination | Source | SRC |+--------+--------+---------+-------------+--------+-----+|2       | 1      | 1       | 2           | 2      | 2   | Byte+--------+--------+---------+-------------+--------+-----+-- Header : 시작 0x05, 0x64 고정-- Length : 데이터 사이즈, Control + Destination, Source, User Data 사이즈, Header, Length, CRC는 제외되며 최대 255(FF)이다-- Control+-----+-----+-----+---------+---------------+| DIR | PRM | FCB | FCV/DFC | FUNCTION CODE |+-----+-----+-----+---------+---+---+---+---+| 7   | 6   | 5   | 4       | 3 | 2 | 1 | 0 | Bit+-----+-----+-----+---------+---+---+---+---+--- DIR : 전송방향(1 Master > Slave, 0 Slave > Master)--- PRM : 1 Primary, 0 Secondary--- FCB : Frame Count Bit(정상 완료 시 0, 1이 반전)--- FCV/DFC :   Frame Count Valid(Requst) / Data Flow Control(Response)  FCV: 1인 경우 Response에서 FCB 확인    DFC: 수신 Buffer의 Overflow가 예상이 될 때 1로 전송--- Function Code---- Primary  0   Remote Link Reset (Confirm Expected)  1   User Process Reset (Confirm Expected)  2   Test Function Expected (Confirm Expected)  3   User Data Expected (Confirm Expected)  4   Unconfirmed User Data Expected (No Reply Expected)---- Secondary  0   Confirm (ACK-positive akcnowledgement)  1   Confirm (NACK-Message not accepted, Link busy)  11  Respond (Link Status DFC=0 or DFC=1)-- Destination : 수신측 DNP 주소-- Source : 발신측 DNP 주소-- CRC : CRC-16, Block 단위 에러검증 코드- Transport+-----+-----+-----------------------+| FIN | FIR | SEQUENCE              |+-----+-----+---+---+---+---+---+---+| 7   | 6   | 5 | 4 | 3 | 2 | 1 | 0 | Bit+-----+-----+---+---+---+---+---+---+-- FIN(Final), FIR(First)는 전문 전송의 시작과 끝을 표시한다.  FIN FIR 설명  1   1   단일 User 전문  1   0   복수 전문중 마지막  0   1   복수 전문중 처음  0   0   복수 전문중 중간-- Sequence는 전솔되는 전문의 순서 번호이며 0~63까지 증가후 0으로 리셋- Application (Slave 측 사용시에만 IIN 존재)+----+----+-------+--------------+-----------+-------+----------+| AC | FC | (IIN) | Object Group | Quallfier | Range | Data ... |+----+----+-------+--------------+-----------+-------+----------+| 1  | 1  | 2     | 2            | 1         | 2 ~ 4 | n        | Byte+----+----+-------+--------------+-----------+-------+----------+-- AC : Application Control+-----+-----+-----+-------------------+| FIN | FIR | CON | SEQUENCE          |+-----+-----+-----+---+---+---+---+---+| 7   | 6   | 5   | 4 | 3 | 2 | 1 | 0 | Bit+-----+-----+-----+---+---+---+---+---+--- FIN, FIR: Transport Header 와 같은 의미--- CON : Confirm(확인응답 요구 시 1, 확인 응답시 0)--- Sequence: 정규 전문 송수신 시 0~15까지 사용 후 0으로 리셋, 비정규 전문 송수신 시 16~31까지 사용 후 16으로 리셋-- FC : Function Code 전문의 목적--- FC Type  Code  Function  0x00  Confirm                           0x01  Read  0x02  Write  0x03  Select  0x04  Operate  0x0d  Cold Start  0x0e  Warm Start  0x14  Enabled Unsollcited Message  0x15  Disabled Unsollcited Message   0x81  Response  0x82  Unsolicited Message-- IIN : Internal Indication, Slave 측에서 응답 시 오류정보를 Bit 로 표시--- 선행 Byte  Bit   해당 Bit가 1이 되는 경우  0x80  Device Restart  0x40  Device Fail  0x20  DNP로 접근 불가능한 DO Point 가 있음  0x10  Time Sync 필요  0x08  Class 3 Data가 있음  0x04  Class 2 Data가 있음  0x02  Class 1 Data가 있음  0x01  전문 수신 완료--- 후행 Byte  Bit   해당 Bit가 1이 되는 경우  0x80  사용 안함  0x40  사용 안함  0x20  설비 구상 정보 이상  0x10  수행 완료된 Request가 재차 요구된 경우  0x08  Event Buffer Overflow  0x04  Out Of Range  0x02  미사용 Data 또는 기능 요구  0x01  사용 않함-- Object Group : Object 와 그에 속한 하위 Variaton으로 구성  Object  Varlation   정보  0x01    00, 01, 02  BINARY INPUT WITH STATUS  0x02    01          BINARY INPUT CHANGE WITHOUT TIME  0x02    02          BINARY INPUT CHANGE WITH TIME  0x0a    00, 02      BINARY OUTPUT STATUS  0x0c    01          CONTROL RELAY OUTPUT BLOCK  0x1e    00, 02      16-BIT ANALOG INPUT  0x32    01          TIME AND DATE  0x3c    02          CLASS 1 DATA  0x3c    03          CLASS 2 DATA  0x3c    04          CLASS 3 DATA  0x46    01          FILE IDENTIFIER  0x50    01          INTERNAL INDICATION  0x50    02          EXTRA LINE CHECK-- Qualifier: Range의 길이와 의미를 결정+---+------------+----------------+| 0 | Index Size | Qualifier Code |+---+---+---+----+---+---+---+----+| 7 | 6 | 5 | 4  | 3 | 2 | 1 | 0  | Bit+---+---+---+----+---+---+---+----+--- Qualifier Code  Index Size 설명  0          Range 내에서 Start, Stop Index가 8bit  1          Range 내에서 Start, Stop Index가 16bit  2          Range 내에서 Start, Stop Index가 32bit  3          Range 의 절대 주소 Identifier 8bit  4          Range 의 절대 주소 Identifier 16bit  5          Range 의 절대 주소 Identifier 32bit  6          Range 의 길이가 0  7          Range 내의 정보가 8bit  8          Range 내의 정보가 16bit  9          Range 내의 정보가 32bit  10         사용 안함  11         Range의 길이가 위의 정의 보다 긴 경우 사용  12~15      사용 안함-- Range : User Data에 사용될 데이터의 시작과 끝 정보를 표시</pre><h3 id="DNP3-Sample-Captures"><a href="#DNP3-Sample-Captures" class="headerlink" title="DNP3 Sample Captures"></a>DNP3 Sample Captures</h3><ul><li><a href="https://wiki.wireshark.org/SampleCaptures?action=AttachFile&do=get&target=dnp3_read.pcap">dnp3_read.pcap</a></li><li><a href="https://wiki.wireshark.org/SampleCaptures?action=AttachFile&do=get&target=dnp3_select_operate.pcap">dnp3_select_operate.pcap</a></li><li><a href="https://wiki.wireshark.org/SampleCaptures?action=AttachFile&do=get&target=dnp3_write.pcap">dnp3_write.pcap</a></li></ul><h3 id="참조"><a href="#참조" class="headerlink" title="참조"></a>참조</h3><ul><li><a href="http://www.sersc.org/journals/JSE/vol7_no1_2010/2.pdf" target="_blank" rel="noopener">보안공학연구논문지</a></li><li><a href="https://www.semanticscholar.org/paper/A-Linux-based-firewall-for-the-DNP3-protocol-Nivethan-Papa/ba81e21d27f243d6e3620a1256cbdc524ce44492" target="_blank" rel="noopener">A Linux-based firewall for the DNP3 protocol(semanticscholar.org)</a></li><li><a href="https://wiki.wireshark.org/SampleCaptures" target="_blank" rel="noopener">wiki.wireshark.org/SampleCaptures</a></li></ul>]]></content:encoded>
      
      <comments>http://yoursite.com/2018/04/19/network-dnp3/#disqus_thread</comments>
    </item>
    
    <item>
      <title>[delphi] 비트 플래그(Bit Flags)</title>
      <link>http://yoursite.com/2018/04/19/delphi-bitflags/</link>
      <guid>http://yoursite.com/2018/04/19/delphi-bitflags/</guid>
      <pubDate>Wed, 18 Apr 2018 15:00:00 GMT</pubDate>
      <description>
      
        
        
          &lt;h2 id=&quot;비트-플래그-Bit-Flags&quot;&gt;&lt;a href=&quot;#비트-플래그-Bit-Flags&quot; class=&quot;headerlink&quot; title=&quot;비트 플래그(Bit Flags)&quot;&gt;&lt;/a&gt;비트 플래그(Bit Flags)&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;비트 수준 
        
      
      </description>
      
      
      <content:encoded><![CDATA[<h2 id="비트-플래그-Bit-Flags"><a href="#비트-플래그-Bit-Flags" class="headerlink" title="비트 플래그(Bit Flags)"></a>비트 플래그(Bit Flags)</h2><ul><li>비트 수준 조작은 프로그램의 공간을 절약하기 위해 사용</li><li>아래 코드와는 다르게 열거형과 집합을 활용 할 수도 있음</li></ul><h3 id="code"><a href="#code" class="headerlink" title="code"></a>code</h3><figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">program</span> Project1;</span><br><span class="line"></span><br><span class="line"><span class="meta">&#123;$APPTYPE CONSOLE&#125;</span></span><br><span class="line"><span class="meta">&#123;$R *.res&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">uses</span></span><br><span class="line">  System.SysUtils,</span><br><span class="line">  uFunc <span class="keyword">in</span> <span class="string">'uFunc.pas'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span></span><br><span class="line">  n: Integer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">try</span></span><br><span class="line">    <span class="comment">&#123; TODO -oUser -cConsole Main : Insert code here &#125;</span></span><br><span class="line">    Writeln( <span class="string">'[비트 연산 플래그 테스트]'</span> + #<span class="string">#13</span>#<span class="string">#10</span></span><br><span class="line">           + <span class="string">'[종류 Type1 = 1, Type1 = 2, Type1 = 3]'</span> + #<span class="string">#13</span>#<span class="string">#10</span> );</span><br><span class="line">    <span class="keyword">while</span> True <span class="keyword">do</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">      Writeln(<span class="string">'종료 0'</span>);</span><br><span class="line">      Writeln(<span class="string">'플래그 입력 1~7: '</span>);</span><br><span class="line">      Readln(n);</span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> n = <span class="number">0</span> <span class="keyword">then</span> <span class="keyword">Exit</span>;</span><br><span class="line">      <span class="keyword">if</span> <span class="keyword">not</span>( n <span class="keyword">in</span> [<span class="number">1</span>..<span class="number">7</span>]) <span class="keyword">then</span> <span class="keyword">Continue</span>;</span><br><span class="line"></span><br><span class="line">      Writeln(<span class="string">''</span>);</span><br><span class="line">      PrintType(n);</span><br><span class="line">      Writeln(<span class="string">''</span>);</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line">  <span class="keyword">except</span></span><br><span class="line">    <span class="keyword">on</span> E: Exception <span class="keyword">do</span></span><br><span class="line">      Writeln(E.ClassName, <span class="string">': '</span>, E.<span class="keyword">Message</span>);</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span>.</span><br></pre></td></tr></table></figure><figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">unit</span> uFunc;</span><br><span class="line"></span><br><span class="line"><span class="keyword">interface</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span></span><br><span class="line">  btType1 = <span class="number">1</span>;</span><br><span class="line">  btType2 = <span class="number">2</span>;</span><br><span class="line">  btType3 = <span class="number">3</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">PrintType</span><span class="params">(n: Integer)</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">implementation</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">IsContain</span><span class="params">(n1, n2: Integer)</span>:</span> Boolean;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  Result := n1 <span class="keyword">and</span> n2 = n2;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">IsType1</span><span class="params">(n: Integer)</span>:</span> Boolean;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  Result := IsContain(n, btType1);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">IsType2</span><span class="params">(n: Integer)</span>:</span> Boolean;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  Result := IsContain(n, btType2);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">IsType3</span><span class="params">(n: Integer)</span>:</span> Boolean;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  Result := IsContain(n, btType3);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">PrintType</span><span class="params">(n: Integer)</span>;</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">if</span> IsType1(n) <span class="keyword">then</span> Writeln(<span class="string">'Type1 ON'</span>) <span class="keyword">else</span> Writeln(<span class="string">'Type1 OFF'</span>);</span><br><span class="line">  <span class="keyword">if</span> IsType2(n) <span class="keyword">then</span> Writeln(<span class="string">'Type2 ON'</span>) <span class="keyword">else</span> Writeln(<span class="string">'Type2 OFF'</span>);</span><br><span class="line">  <span class="keyword">if</span> IsType3(n) <span class="keyword">then</span> Writeln(<span class="string">'Type3 ON'</span>) <span class="keyword">else</span> Writeln(<span class="string">'Type3 OFF'</span>);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">end</span>.</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>http://yoursite.com/2018/04/19/delphi-bitflags/#disqus_thread</comments>
    </item>
    
    <item>
      <title>[jekyll] category 페이지 추가(add category page)</title>
      <link>http://yoursite.com/2018/04/19/jekyll-category/</link>
      <guid>http://yoursite.com/2018/04/19/jekyll-category/</guid>
      <pubDate>Wed, 18 Apr 2018 15:00:00 GMT</pubDate>
      <description>
      
        
        
          &lt;h2 id=&quot;category-페이지-추가&quot;&gt;&lt;a href=&quot;#category-페이지-추가&quot; class=&quot;headerlink&quot; title=&quot;category 페이지 추가&quot;&gt;&lt;/a&gt;category 페이지 추가&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;참조 링크된 방법으로 
        
      
      </description>
      
      
      <content:encoded><![CDATA[<h2 id="category-페이지-추가"><a href="#category-페이지-추가" class="headerlink" title="category 페이지 추가"></a>category 페이지 추가</h2><ul><li>참조 링크된 방법으로 블로그에 활용 중</li><li>카테고리 별로 page 만들기 귀찮아서 사용</li></ul><h3 id="참조"><a href="#참조" class="headerlink" title="참조"></a>참조</h3><ul><li><a href="https://codinfox.github.io/dev/2015/03/06/use-tags-and-categories-in-your-jekyll-based-github-pages/" target="_blank" rel="noopener">Use Tags and Categories in your Jekyll based Github Pages without plugins (codinfox.github.io)</a></li></ul>]]></content:encoded>
      
      <comments>http://yoursite.com/2018/04/19/jekyll-category/#disqus_thread</comments>
    </item>
    
    <item>
      <title>[delphi] 모달 창 띄울 시 배경 효과</title>
      <link>http://yoursite.com/2018/04/12/delphi-modalshowtip-post/</link>
      <guid>http://yoursite.com/2018/04/12/delphi-modalshowtip-post/</guid>
      <pubDate>Wed, 11 Apr 2018 15:00:00 GMT</pubDate>
      <description>
      
        
        
          &lt;h2 id=&quot;모달-창-띄울-시-배경-효과&quot;&gt;&lt;a href=&quot;#모달-창-띄울-시-배경-효과&quot; class=&quot;headerlink&quot; title=&quot;모달 창 띄울 시 배경 효과&quot;&gt;&lt;/a&gt;모달 창 띄울 시 배경 효과&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;모달 창을 띄울 때 B
        
      
      </description>
      
      
      <content:encoded><![CDATA[<h2 id="모달-창-띄울-시-배경-효과"><a href="#모달-창-띄울-시-배경-효과" class="headerlink" title="모달 창 띄울 시 배경 효과"></a>모달 창 띄울 시 배경 효과</h2><ul><li>모달 창을 띄울 때 BG변화를 줄 수 있는 예</li><li>모달 창을 띄우기 전 후에 실행되는  “Application.OnModalBegin”, “Application.OnModalEnd” 이벤트 활용</li><li>Delphi XE8</li></ul><h3 id="code"><a href="#code" class="headerlink" title="code"></a>code</h3><p>main.pas</p><figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">unit</span> Main;</span><br><span class="line"></span><br><span class="line"><span class="keyword">interface</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">uses</span></span><br><span class="line">  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,</span><br><span class="line">  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.AppEvnts, Vcl.StdCtrls;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span></span><br><span class="line">  <span class="title">TFMain</span> = <span class="keyword">class</span>(TForm)</span><br><span class="line">    btnModal: TButton;</span><br><span class="line">    <span class="function"><span class="keyword">procedure</span> <span class="title">FormCreate</span><span class="params">(Sender: TObject)</span>;</span></span><br><span class="line">    <span class="function"><span class="keyword">procedure</span> <span class="title">btnModalClick</span><span class="params">(Sender: TObject)</span>;</span></span><br><span class="line">  <span class="keyword">private</span></span><br><span class="line">    <span class="comment">&#123; Private declarations &#125;</span></span><br><span class="line">  <span class="keyword">public</span></span><br><span class="line">    <span class="comment">&#123; Public declarations &#125;</span></span><br><span class="line">  <span class="keyword">protected</span></span><br><span class="line">    <span class="function"><span class="keyword">procedure</span> <span class="title">OnEventsModalBegin</span><span class="params">(Sender: TObject)</span>;</span></span><br><span class="line">    <span class="function"><span class="keyword">procedure</span> <span class="title">OnEventsModalEnd</span><span class="params">(Sender: TObject)</span>;</span></span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span></span><br><span class="line">  FMain: TFMain;</span><br><span class="line"></span><br><span class="line"><span class="keyword">implementation</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">uses</span></span><br><span class="line">  Screen;</span><br><span class="line"></span><br><span class="line"><span class="meta">&#123;$R *.dfm&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">TFMain</span>.<span class="title">OnEventsModalBegin</span><span class="params">(Sender: TObject)</span>;</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  ScreenBegin(Self);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">TFMain</span>.<span class="title">OnEventsModalEnd</span><span class="params">(Sender: TObject)</span>;</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  ScreenEnd;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">TFMain</span>.<span class="title">btnModalClick</span><span class="params">(Sender: TObject)</span>;</span></span><br><span class="line"><span class="keyword">var</span></span><br><span class="line">  f: TForm;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  f := TForm.Create(Self);</span><br><span class="line">  f.ShowModal;</span><br><span class="line">  f.Free;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">TFMain</span>.<span class="title">FormCreate</span><span class="params">(Sender: TObject)</span>;</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  Application.OnModalBegin := OnEventsModalBegin;</span><br><span class="line">  Application.OnModalEnd := OnEventsModalEnd;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">end</span>.</span><br></pre></td></tr></table></figure><p>Screen.pas</p><ul><li>FScreen.BorderIcons = [bsNone]</li><li>FScreen.AlphaBlend = True</li><li>FScreen.AlphaBlendValue = 150</li></ul><figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">unit</span> Screen;</span><br><span class="line"></span><br><span class="line"><span class="keyword">interface</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">uses</span></span><br><span class="line">  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,</span><br><span class="line">  Vcl.Controls, Vcl.Forms, Vcl.Dialogs;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span></span><br><span class="line">  <span class="title">TFScreen</span> = <span class="keyword">class</span>(TForm)</span><br><span class="line">  <span class="keyword">private</span></span><br><span class="line">    <span class="comment">&#123; Private declarations &#125;</span></span><br><span class="line">  <span class="keyword">public</span></span><br><span class="line">    <span class="comment">&#123; Public declarations &#125;</span></span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">ScreenBegin</span><span class="params">(f: TForm)</span>;</span></span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">ScreenEnd</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">implementation</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&#123;$R *.dfm&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span></span><br><span class="line">  FScreen: TFScreen;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">ScreenBegin</span><span class="params">(f: TForm)</span>;</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">if</span> FScreen = <span class="keyword">nil</span> <span class="keyword">then</span></span><br><span class="line">    FScreen := TFScreen.Create(<span class="keyword">nil</span>);</span><br><span class="line"></span><br><span class="line">  FScreen.Top := f.Top;</span><br><span class="line">  FScreen.Left := f.Left;</span><br><span class="line">  FScreen.Height := f.Height;</span><br><span class="line">  FScreen.Width := f.Width;</span><br><span class="line">  FScreen.Show;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">ScreenEnd</span>;</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  FScreen.Hide;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">initialization</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">finalization</span></span><br><span class="line">  FScreen.Free;</span><br><span class="line">  FScreen := <span class="keyword">nil</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">end</span>.</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>http://yoursite.com/2018/04/12/delphi-modalshowtip-post/#disqus_thread</comments>
    </item>
    
    <item>
      <title>[delphi] 컴포넌트 이동하기(Moving components)</title>
      <link>http://yoursite.com/2018/04/11/delphi-movecomponents-post/</link>
      <guid>http://yoursite.com/2018/04/11/delphi-movecomponents-post/</guid>
      <pubDate>Tue, 10 Apr 2018 15:00:00 GMT</pubDate>
      <description>
      
        
        
          &lt;h2 id=&quot;폼-안에-컴포넌트-움직이기&quot;&gt;&lt;a href=&quot;#폼-안에-컴포넌트-움직이기&quot; class=&quot;headerlink&quot; title=&quot;폼 안에 컴포넌트 움직이기&quot;&gt;&lt;/a&gt;폼 안에 컴포넌트 움직이기&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;자유도 높은 화면 구성이 필요
        
      
      </description>
      
      
      <content:encoded><![CDATA[<h2 id="폼-안에-컴포넌트-움직이기"><a href="#폼-안에-컴포넌트-움직이기" class="headerlink" title="폼 안에 컴포넌트 움직이기"></a>폼 안에 컴포넌트 움직이기</h2><ul><li>자유도 높은 화면 구성이 필요해서 데모를 만듬</li><li>components의 parent와 control index 를 활용함</li><li>Delphi 2006 에서 작성</li></ul><h3 id="code"><a href="#code" class="headerlink" title="code"></a>code</h3><figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">unit</span> Main;</span><br><span class="line"></span><br><span class="line"><span class="keyword">interface</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">uses</span></span><br><span class="line">  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,</span><br><span class="line">  Dialogs, ExtCtrls, sPanel, StdCtrls, sButton, Math;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span></span><br><span class="line">  <span class="title">TForm6</span> = <span class="keyword">class</span>(TForm)</span><br><span class="line">    fnlBG: TFlowPanel;</span><br><span class="line">    pnlMenu: TsPanel;</span><br><span class="line">    btnEdit: TsButton;</span><br><span class="line">    <span class="function"><span class="keyword">procedure</span> <span class="title">FormCreate</span><span class="params">(Sender: TObject)</span>;</span></span><br><span class="line">    <span class="function"><span class="keyword">procedure</span> <span class="title">OnFormMouseDown</span><span class="params">(Sender: TObject; Button: TMouseButton; Shift: TShiftState; X, Y: Integer)</span>;</span></span><br><span class="line">    <span class="function"><span class="keyword">procedure</span> <span class="title">OnFormMouseMove</span><span class="params">(Sender: TObject; Shift: TShiftState; X, Y: Integer)</span>;</span></span><br><span class="line">    <span class="function"><span class="keyword">procedure</span> <span class="title">OnFormMouseUp</span><span class="params">(Sender: TObject; Button: TMouseButton; Shift: TShiftState; X, Y: Integer)</span>;</span></span><br><span class="line">    <span class="function"><span class="keyword">procedure</span> <span class="title">btnEditClick</span><span class="params">(Sender: TObject)</span>;</span></span><br><span class="line">  <span class="keyword">private</span></span><br><span class="line">    <span class="comment">&#123; Private declarations &#125;</span></span><br><span class="line">    bEditMode, bItemSelected: Boolean;</span><br><span class="line">    NewPos, OldPos: TPoint;</span><br><span class="line">    arrForms: <span class="keyword">array</span> <span class="keyword">of</span> TForm;</span><br><span class="line">    arrButtons: <span class="keyword">array</span> <span class="keyword">of</span> TButton;</span><br><span class="line">  <span class="keyword">public</span></span><br><span class="line">    <span class="comment">&#123; Public declarations &#125;</span></span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span></span><br><span class="line">  MAX_FORM = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span></span><br><span class="line">  Form6: TForm6;</span><br><span class="line"></span><br><span class="line"><span class="keyword">implementation</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&#123;$R *.dfm&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">TForm6</span>.<span class="title">FormCreate</span><span class="params">(Sender: TObject)</span>;</span></span><br><span class="line"><span class="keyword">var</span></span><br><span class="line">  i: Integer;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="comment">// Init</span></span><br><span class="line">  bEditMode := False;</span><br><span class="line">  bItemSelected := False;</span><br><span class="line">  SetLength(arrForms, MAX_FORM);</span><br><span class="line">  SetLength(arrButtons, MAX_FORM);</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">for</span> i := <span class="number">0</span> <span class="keyword">to</span> MAX_FORM - <span class="number">1</span> <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    <span class="comment">// Set Form</span></span><br><span class="line">    arrForms[i] := TForm.Create(Self);</span><br><span class="line">    arrForms[i].BorderStyle := bsNone;</span><br><span class="line">    Randomize;</span><br><span class="line">    arrForms[i].Color := RGB(Random(<span class="number">255</span>), Random(<span class="number">255</span>), Random(<span class="number">255</span>));</span><br><span class="line">    arrForms[i].Visible := false;</span><br><span class="line">    arrForms[i].AlignWithMargins := True;</span><br><span class="line">    arrForms[i].Caption := IntToStr(i);</span><br><span class="line">    arrForms[i].Parent := fnlBG;</span><br><span class="line">    arrForms[i].Height := <span class="number">100</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">case</span> i <span class="keyword">of</span></span><br><span class="line">      <span class="number">0</span>, <span class="number">6</span>:</span><br><span class="line">        arrForms[i].Width := <span class="number">800</span>;</span><br><span class="line">      <span class="number">1</span>..<span class="number">4</span>:</span><br><span class="line">        arrForms[i].Width := <span class="number">400</span>;</span><br><span class="line">      <span class="keyword">else</span></span><br><span class="line">        arrForms[i].Width := <span class="number">200</span>;</span><br><span class="line">    <span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Set Button</span></span><br><span class="line">    arrButtons[i] := TButton.Create(Self);</span><br><span class="line">    arrButtons[i].Caption := <span class="string">'Move'</span>;</span><br><span class="line">    arrButtons[i].Visible := False;</span><br><span class="line">    arrButtons[i].Parent := arrForms[i];</span><br><span class="line"></span><br><span class="line">    arrButtons[i].OnMouseDown := OnFormMouseDown;</span><br><span class="line">    arrButtons[i].OnMouseMove := OnFormMouseMove;</span><br><span class="line">    arrButtons[i].OnMouseUp := OnFormMouseUp;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// show</span></span><br><span class="line">  <span class="keyword">for</span> i := <span class="number">0</span> <span class="keyword">to</span> MAX_FORM - <span class="number">1</span> <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    arrForms[i].Visible := True;</span><br><span class="line">    arrButtons[i].Visible := True;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">TForm6</span>.<span class="title">OnFormMouseDown</span><span class="params">(Sender: TObject; Button: TMouseButton; Shift: TShiftState; X, Y: Integer)</span>;</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  bItemSelected := True;</span><br><span class="line">  <span class="keyword">if</span> (Button = mbLeft) <span class="keyword">then</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    (Sender <span class="keyword">as</span> TButton).Parent.Parent := Self;</span><br><span class="line">    SetCapture((Sender <span class="keyword">as</span> TButton).Handle);</span><br><span class="line">    GetCursorPos(OldPos);</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">TForm6</span>.<span class="title">OnFormMouseMove</span><span class="params">(Sender: TObject; Shift: TShiftState; X, Y: Integer)</span>;</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">if</span> <span class="keyword">not</span> bItemSelected <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">Exit</span>;</span><br><span class="line">  GetCursorPos(NewPos);</span><br><span class="line">  (Sender <span class="keyword">as</span> TButton).Parent.Left := (Sender <span class="keyword">as</span> TButton).Parent.Left - OldPos.X + NewPos.X;</span><br><span class="line">  (Sender <span class="keyword">as</span> TButton).Parent.Top := (Sender <span class="keyword">as</span> TButton).Parent.Top - OldPos.Y + NewPos.Y;</span><br><span class="line">  OldPos := NewPos;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">TForm6</span>.<span class="title">OnFormMouseUp</span><span class="params">(Sender: TObject; Button: TMouseButton; Shift: TShiftState; X, Y: Integer)</span>;</span></span><br><span class="line"><span class="keyword">var</span></span><br><span class="line">  TmpPos: TPoint;</span><br><span class="line">  AHWN: HWND;</span><br><span class="line">  nIdx: Integer;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">if</span> <span class="keyword">not</span> bItemSelected <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">Exit</span>;</span><br><span class="line"></span><br><span class="line">  (Sender <span class="keyword">as</span> TButton).Parent.Parent := fnlBG;</span><br><span class="line">  GetCursorPos(TmpPos);</span><br><span class="line">  AHWN := WindowFromPoint(TmpPos);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> FindControl(AHWN) <span class="keyword">is</span> TForm <span class="keyword">then</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    nIdx := fnlBG.GetControlIndex(FindControl(AHWN) <span class="keyword">as</span> TForm);</span><br><span class="line">    fnlBG.SetControlIndex((Sender <span class="keyword">as</span> TButton).Parent, nIdx);</span><br><span class="line">    ReleaseCapture;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  bItemSelected := False;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">TForm6</span>.<span class="title">btnEditClick</span><span class="params">(Sender: TObject)</span>;</span></span><br><span class="line"><span class="keyword">var</span></span><br><span class="line">  i: Integer;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  bEditMode := <span class="keyword">not</span> bEditMode;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">for</span> i := <span class="number">0</span> <span class="keyword">to</span> MAX_FORM - <span class="number">1</span> <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">if</span> bEditMode <span class="keyword">then</span></span><br><span class="line">      arrForms[i].BorderStyle := bsToolWindow</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">      arrForms[i].BorderStyle := bsNone;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">end</span>.</span><br></pre></td></tr></table></figure><h3 id="file-link"><a href="#file-link" class="headerlink" title="file link"></a>file link</h3><ul><li><a href="https://drive.google.com/file/d/1SquBp3JLa-ru7HvgoyTME5n7XtklCDLy/view?usp=sharing" target="_blank" rel="noopener">MoveComponent</a></li></ul>]]></content:encoded>
      
      <comments>http://yoursite.com/2018/04/11/delphi-movecomponents-post/#disqus_thread</comments>
    </item>
    
    <item>
      <title>[delphi] pcap header 살펴보기</title>
      <link>http://yoursite.com/2018/04/09/delphi-pcapheader-post/</link>
      <guid>http://yoursite.com/2018/04/09/delphi-pcapheader-post/</guid>
      <pubDate>Sun, 08 Apr 2018 15:00:00 GMT</pubDate>
      <description>
      
        
        
          &lt;h2 id=&quot;pcap-header-살펴보기&quot;&gt;&lt;a href=&quot;#pcap-header-살펴보기&quot; class=&quot;headerlink&quot; title=&quot;pcap header 살펴보기&quot;&gt;&lt;/a&gt;pcap header 살펴보기&lt;/h2&gt;&lt;h3 id=&quot;Data-Type
        
      
      </description>
      
      
      <content:encoded><![CDATA[<h2 id="pcap-header-살펴보기"><a href="#pcap-header-살펴보기" class="headerlink" title="pcap header 살펴보기"></a>pcap header 살펴보기</h2><h3 id="Data-Type"><a href="#Data-Type" class="headerlink" title="Data Type"></a>Data Type</h3><figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">┌───────────────────┐</span><br><span class="line">│GLib     │C              │Delphi    │</span><br><span class="line">├───────────────────┤</span><br><span class="line">│guint32  │unsigned int   │LongWord  │</span><br><span class="line">│guint16  │unsigned short │Word      │</span><br><span class="line">│gint32   │signed int     │Integer   │</span><br><span class="line">│         │unsigned char  │Byte      │</span><br><span class="line">│         │unsigned int16 │word      │</span><br><span class="line">┖───────────────────┘</span><br><span class="line">``` </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">### GLOBAL HEADER 구조체</span><br><span class="line">``` delphi</span><br><span class="line"><span class="keyword">type</span></span><br><span class="line">  TGLOBAL_HEADER = <span class="keyword">record</span></span><br><span class="line">    magic_number: LongWord;</span><br><span class="line">    version_major: Word;</span><br><span class="line">    version_minor: Word;</span><br><span class="line">    thiszone: Integer;</span><br><span class="line">    sigfigs: LongWord;</span><br><span class="line">    snaplen: LongWord;</span><br><span class="line">    network: LongWord;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  PGLOBAL_HEADER = ^TGLOBAL_HEADER;</span><br><span class="line">```  </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">### PACKET HEADER 구조체</span><br><span class="line">``` delphi</span><br><span class="line"><span class="keyword">type</span></span><br><span class="line">  TPACKET_HEADER = <span class="keyword">record</span></span><br><span class="line">    ts_sec: LongWord;</span><br><span class="line">    ts_usec: LongWord;</span><br><span class="line">    incl_len: LongWord;</span><br><span class="line">    orig_len: LongWord;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line">  PPACKET_HEADER = ^TPACKET_HEADER;</span><br></pre></td></tr></table></figure><h3 id="PACKET-DATA"><a href="#PACKET-DATA" class="headerlink" title="PACKET DATA"></a>PACKET DATA</h3><ul><li>특정 바이트 정렬없이 incl_len 바이트의 데이터 blob로서 패킷 헤더 바로 뒤에 옵니다.  </li></ul><h3 id="Layer2-Layer3-Layer4"><a href="#Layer2-Layer3-Layer4" class="headerlink" title="Layer2, Layer3, Layer4"></a>Layer2, Layer3, Layer4</h3><ul><li>나중에 시간나면 추가…  </li></ul><h3 id="CODE"><a href="#CODE" class="headerlink" title="CODE"></a>CODE</h3><figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">Init</span><span class="params">(rGHeader: PGLOBAL_HEADER)</span>;</span> <span class="keyword">overload</span>;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  rGHeader^.magic_number := StrToInt(<span class="string">'$A1B2C3D4'</span>);</span><br><span class="line">  rGHeader^.version_major := <span class="number">2</span>;</span><br><span class="line">  rGHeader^.version_minor := <span class="number">4</span>;</span><br><span class="line">  rGHeader^.thiszone := <span class="number">0</span>;</span><br><span class="line">  rGHeader^.sigfigs := <span class="number">0</span>;</span><br><span class="line">  rGHeader^.snaplen := <span class="number">65535</span>;</span><br><span class="line">  rGHeader^.network := <span class="number">1</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">Init</span><span class="params">(rPHeader: PPACKET_HEADER)</span>;</span> <span class="keyword">overload</span>;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  rPHeader^.ts_sec := StrToInt(<span class="string">'$5AA5438E'</span>);</span><br><span class="line">  rPHeader^.ts_usec := <span class="number">0</span>;</span><br><span class="line">  rPHeader^.incl_len := <span class="number">0</span>;</span><br><span class="line">  rPHeader^.orig_len := <span class="number">0</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">GetGlobalHeaderBinary</span>:</span> TBytes;</span><br><span class="line"><span class="keyword">var</span></span><br><span class="line">  ms: TMemoryStream;</span><br><span class="line">  rG: PGLOBAL_HEADER;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  New(rG);</span><br><span class="line">  Init(rG);</span><br><span class="line"></span><br><span class="line">  ms := TMemoryStream.Create;</span><br><span class="line">  ms.WriteData(rG, SizeOf(TGLOBAL_HEADER));</span><br><span class="line"></span><br><span class="line">  ms.Position := <span class="number">0</span>;</span><br><span class="line">  SetLength(Result, ms.Size);</span><br><span class="line">  ms.ReadData(Result, ms.Size);</span><br><span class="line"></span><br><span class="line">  ms.Free;</span><br><span class="line">  Dispose(rG);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">GetPacketHeaderBinary</span><span class="params">(b: TBytes)</span>:</span> TBytes;</span><br><span class="line"><span class="keyword">var</span></span><br><span class="line">  ms: TMemoryStream;</span><br><span class="line">  rP: PPACKET_HEADER;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  New(rP);</span><br><span class="line">  Init(rP);</span><br><span class="line"></span><br><span class="line">  rP^.incl_len := Length(b);</span><br><span class="line">  rP^.orig_len := Length(b);</span><br><span class="line"></span><br><span class="line">  ms := TMemoryStream.Create;</span><br><span class="line">  ms.WriteData(rP, SizeOf(TPACKET_HEADER));</span><br><span class="line">  ms.WriteData(b, Length(b));</span><br><span class="line"></span><br><span class="line">  ms.Position := <span class="number">0</span>;</span><br><span class="line">  SetLength(Result, ms.Size);</span><br><span class="line">  ms.ReadData(Result, ms.Size);</span><br><span class="line"></span><br><span class="line">  ms.Free;</span><br><span class="line">  Dispose(rP);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">GetPcapBinary</span><span class="params">(b: TBytes)</span>:</span> TBytes;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  Result := GetGlobalHeaderBinary + GetPacketHeaderBinary(b);</span><br><span class="line"><span class="keyword">end</span>;</span><br></pre></td></tr></table></figure><h3 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h3><ul><li><a href="https://wiki.wireshark.org/Development/LibpcapFileFormat" target="_blank" rel="noopener">https://wiki.wireshark.org/Development/LibpcapFileFormat</a></li><li><a href="http://docwiki.embarcadero.com/RADStudio/Tokyo/en/Delphi_Data_Types_for_API_Integration" target="_blank" rel="noopener">http://docwiki.embarcadero.com/RADStudio/Tokyo/en/Delphi_Data_Types_for_API_Integration</a></li><li><a href="http://docwiki.embarcadero.com/RADStudio/Tokyo/en/Delphi_to_C%2B%2B_types_mapping" target="_blank" rel="noopener">http://docwiki.embarcadero.com/RADStudio/Tokyo/en/Delphi_to_C%2B%2B_types_mapping</a></li></ul>]]></content:encoded>
      
      <comments>http://yoursite.com/2018/04/09/delphi-pcapheader-post/#disqus_thread</comments>
    </item>
    
    <item>
      <title>[book] 소프트 스킬(평범한 개발자의 비범한 인생 전략 71가지)</title>
      <link>http://yoursite.com/2018/04/05/book-softskill-post/</link>
      <guid>http://yoursite.com/2018/04/05/book-softskill-post/</guid>
      <pubDate>Wed, 04 Apr 2018 15:00:00 GMT</pubDate>
      <description>
      
        
        
          &lt;h2 id=&quot;소프트-스킬-평범한-개발자의-비범한-인생-전략-71가지&quot;&gt;&lt;a href=&quot;#소프트-스킬-평범한-개발자의-비범한-인생-전략-71가지&quot; class=&quot;headerlink&quot; title=&quot;소프트 스킬(평범한 개발자의 비범한 인생 전략 71가지)&quot;
        
      
      </description>
      
      
      <content:encoded><![CDATA[<h2 id="소프트-스킬-평범한-개발자의-비범한-인생-전략-71가지"><a href="#소프트-스킬-평범한-개발자의-비범한-인생-전략-71가지" class="headerlink" title="소프트 스킬(평범한 개발자의 비범한 인생 전략 71가지)"></a>소프트 스킬(평범한 개발자의 비범한 인생 전략 71가지)</h2><ul><li>John Sonmez 라는 개발자가 쓴 책으로 개발자로 사는 데 도움이 되는 정보와 조언을 집약한 안내서 같은 책이다. 자신이 살면서 성공과 실패를 통해 배운 것, 여러 사람을 만나면서 보고 들으며 배운 것들을 공유하기 위해 지필했다고 한다.</li><li><a href="https://itunes.apple.com/us/podcast/get-up-and-code/id646958161?mt=2" target="_blank" rel="noopener">Get Up and CODE by John Sonmez</a></li><li><a href="https://simpleprogrammer.com/" target="_blank" rel="noopener">simple programmer by John Sonmez</a></li></ul><h3 id="개발자를-위한-자기-개발서"><a href="#개발자를-위한-자기-개발서" class="headerlink" title="개발자를 위한 자기 개발서."></a>개발자를 위한 자기 개발서.</h3><ul><li>우리나라와 맞지 않는 부분이 있지만, 개발자의 위치에서 고민이 많아 질 때 한번쯤 읽으면 도움되는 책이다.</li><li>마음가짐, 진로, 건강, 개발학습법 등이 쉽게 설명되어 있어 ‘나도 한번 해볼까’ 하는 생각이 드는 책이다.</li><li>참조링크 <a href="https://thebook.io/006794/" target="_blank" rel="noopener">https://thebook.io/006794/</a></li></ul>]]></content:encoded>
      
      <comments>http://yoursite.com/2018/04/05/book-softskill-post/#disqus_thread</comments>
    </item>
    
    <item>
      <title>[delphi] 타입 변환</title>
      <link>http://yoursite.com/2018/04/03/delphi-type-post/</link>
      <guid>http://yoursite.com/2018/04/03/delphi-type-post/</guid>
      <pubDate>Mon, 02 Apr 2018 15:00:00 GMT</pubDate>
      <description>
      
        
        
          &lt;h2 id=&quot;타입-변환&quot;&gt;&lt;a href=&quot;#타입-변환&quot; class=&quot;headerlink&quot; title=&quot;타입 변환&quot;&gt;&lt;/a&gt;타입 변환&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;AnsiString to Bytes(array of byte)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
        
      
      </description>
      
      
      <content:encoded><![CDATA[<h2 id="타입-변환"><a href="#타입-변환" class="headerlink" title="타입 변환"></a>타입 변환</h2><ul><li><p>AnsiString to Bytes(array of byte)</p></li><li><p>Bytes(array of byte) to AnsiString</p></li><li><p>Hex String to Bytes(array of byte)</p></li><li><p>Bytes(array of byte) to Hex String</p></li></ul><figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">ToStrByte</span><span class="params">(ansi: AnsiString)</span>:</span> TBytes;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  SetLength(Result, Length(ansi));</span><br><span class="line">  Move(ansi[<span class="number">1</span>], Result[<span class="number">0</span>], Length(ansi));</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">ToByteStr</span><span class="params">(b: TBytes)</span>:</span> AnsiString;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  SetLength(Result, Length(b));</span><br><span class="line">  Move(b[<span class="number">0</span>], Result[<span class="number">1</span>], Length(b));</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">ToByteHex</span><span class="params">(b: TBytes)</span>:</span> AnsiString;</span><br><span class="line"><span class="keyword">var</span> i: integer;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  Result := <span class="string">''</span>;</span><br><span class="line">  <span class="keyword">for</span> i <span class="keyword">in</span> b <span class="keyword">do</span> Result := Result + IntToHex(i, <span class="number">2</span>);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">ToHexByte</span><span class="params">(hex: AnsiString)</span>:</span> TBytes;</span><br><span class="line"><span class="keyword">var</span> i: Integer;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  SetLength(Result, Length(hex) <span class="keyword">div</span> <span class="number">2</span>);</span><br><span class="line">  <span class="keyword">for</span> i:= <span class="number">0</span> <span class="keyword">to</span> Length(Result) - <span class="number">1</span> <span class="keyword">do</span></span><br><span class="line">    Result[i] := StrToInt(<span class="string">'$'</span> + Copy(hex, (i*<span class="number">2</span>) + <span class="number">1</span>, <span class="number">2</span>));</span><br><span class="line"><span class="keyword">end</span>;</span><br></pre></td></tr></table></figure><ul><li>예)</li></ul><figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">TForm1</span>.<span class="title">FormCreate</span><span class="params">(Sender: TObject)</span>;</span></span><br><span class="line"><span class="keyword">var</span></span><br><span class="line">  s1, s2, sTemp: <span class="keyword">String</span>;</span><br><span class="line">  b1, b2: TBytes;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  sTemp := <span class="string">'테스트'</span>;</span><br><span class="line">  b1 := ToStrByte(sTemp);</span><br><span class="line">  s1 := ToByteHex(b1);</span><br><span class="line">  ShowMessage(s1);</span><br><span class="line"></span><br><span class="line">  b2 := ToHexByte(s1);</span><br><span class="line">  s2 := ToByteStr(b2);</span><br><span class="line">  ShowMessage(s2);</span><br><span class="line"><span class="keyword">end</span>;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>http://yoursite.com/2018/04/03/delphi-type-post/#disqus_thread</comments>
    </item>
    
    <item>
      <title>[delphi] 스마트 포인터</title>
      <link>http://yoursite.com/2018/03/29/delphi-pointer-post/</link>
      <guid>http://yoursite.com/2018/03/29/delphi-pointer-post/</guid>
      <pubDate>Wed, 28 Mar 2018 15:00:00 GMT</pubDate>
      <description>
      
        
        
          &lt;h2 id=&quot;스마트-포인터&quot;&gt;&lt;a href=&quot;#스마트-포인터&quot; class=&quot;headerlink&quot; title=&quot;스마트 포인터&quot;&gt;&lt;/a&gt;스마트 포인터&lt;/h2&gt;&lt;p&gt;자동 객체 해제 클래스 테스트&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;함수 안에서 제한적 사용&lt;/p&gt;
        
      
      </description>
      
      
      <content:encoded><![CDATA[<h2 id="스마트-포인터"><a href="#스마트-포인터" class="headerlink" title="스마트 포인터"></a>스마트 포인터</h2><p>자동 객체 해제 클래스 테스트</p><ul><li><p>함수 안에서 제한적 사용</p></li><li><p>개선 필요</p></li><li><p>코드</p></li></ul><figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">unit</span> uSmartPointer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">interface</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">DoSmartPointer</span><span class="params">( <span class="keyword">out</span> Reference: TObject; Instance: TObject )</span>:</span> IUnknown;</span><br><span class="line"></span><br><span class="line"><span class="keyword">implementation</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span></span><br><span class="line">  <span class="title">TSmartPointer</span> = <span class="keyword">class</span>( TInterfacedObject )</span><br><span class="line">  <span class="keyword">private</span></span><br><span class="line">    FInstance: TObject;</span><br><span class="line">  <span class="keyword">public</span></span><br><span class="line">    <span class="function"><span class="keyword">constructor</span> <span class="title">Create</span><span class="params">( AInstance: TObject )</span>;</span></span><br><span class="line">    <span class="function"><span class="keyword">destructor</span> <span class="title">Destroy</span>;</span> <span class="keyword">override</span>;</span><br><span class="line">  <span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">&#123; TSmartPointer &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">DoSmartPointer</span><span class="params">( <span class="keyword">out</span> Reference: TObject; Instance: TObject )</span>:</span> IUnknown;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  Result := TSmartPointer.Create( Instance );</span><br><span class="line">  TObject(Reference) := Instance;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">constructor</span> <span class="title">TSmartPointer</span>.<span class="title">Create</span><span class="params">(AInstance: TObject)</span>;</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  FInstance := AInstance;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">destructor</span> <span class="title">TSmartPointer</span>.<span class="title">Destroy</span>;</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  FInstance.Free;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">inherited</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">end</span>.</span><br></pre></td></tr></table></figure><ul><li>예                                                 </li></ul><figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">GetData</span>;</span>                            </span><br><span class="line"><span class="keyword">var</span> l: TList;     </span><br><span class="line"><span class="keyword">begin</span>                                           </span><br><span class="line">  DoSmartPointer( TObject(l), TList.Create )  </span><br><span class="line"><span class="keyword">end</span>;</span><br></pre></td></tr></table></figure><p>참조: <a href="https://msdn.microsoft.com/ko-kr/library/hh279674.aspx" target="_blank" rel="noopener">https://msdn.microsoft.com/ko-kr/library/hh279674.aspx</a></p>]]></content:encoded>
      
      <comments>http://yoursite.com/2018/03/29/delphi-pointer-post/#disqus_thread</comments>
    </item>
    
    <item>
      <title>[delphi] 비동기 함수</title>
      <link>http://yoursite.com/2018/03/28/delphi-aync-post/</link>
      <guid>http://yoursite.com/2018/03/28/delphi-aync-post/</guid>
      <pubDate>Tue, 27 Mar 2018 15:00:00 GMT</pubDate>
      <description>
      
        
        
          &lt;h2 id=&quot;비동기-함수&quot;&gt;&lt;a href=&quot;#비동기-함수&quot; class=&quot;headerlink&quot; title=&quot;비동기 함수&quot;&gt;&lt;/a&gt;비동기 함수&lt;/h2&gt;&lt;p&gt;비동기로 지연된 코드 실행을 위해 작성&lt;/p&gt;
&lt;p&gt;proc: 프로시저&lt;/p&gt;
&lt;p&gt;nInterv
        
      
      </description>
      
      
      <content:encoded><![CDATA[<h2 id="비동기-함수"><a href="#비동기-함수" class="headerlink" title="비동기 함수"></a>비동기 함수</h2><p>비동기로 지연된 코드 실행을 위해 작성</p><p>proc: 프로시저</p><p>nInterval: 지연 시간</p><figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">procedure</span> <span class="title">SetTimeOut</span><span class="params">(proc: TProc; nInterval: Integer = 100)</span>;</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  TThread.CreateAnonymousThread( <span class="function"><span class="keyword">procedure</span></span></span><br><span class="line"><span class="function">    <span class="title">begin</span></span></span><br><span class="line"><span class="function">    <span class="title">Sleep</span><span class="params">(nInterval)</span>;</span></span><br><span class="line"><span class="comment">// 내부 코드</span></span><br><span class="line">    TThread.Synchronize( TThread.CurrentThread, <span class="function"><span class="keyword">procedure</span></span></span><br><span class="line"><span class="function">      <span class="title">begin</span></span></span><br><span class="line"><span class="function"><span class="comment">// GUI 코드</span></span></span><br><span class="line"><span class="function">        <span class="title">proc</span></span></span><br><span class="line"><span class="function">      <span class="title">end</span>);</span></span><br><span class="line">    <span class="keyword">end</span>).Start;</span><br><span class="line"><span class="keyword">end</span>;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>http://yoursite.com/2018/03/28/delphi-aync-post/#disqus_thread</comments>
    </item>
    
  </channel>
</rss>
